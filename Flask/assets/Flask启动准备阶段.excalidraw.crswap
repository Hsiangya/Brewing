{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "e2CaX3piYZuTZ1gMNRbzm",
      "type": "text",
      "x": 1717.863991950669,
      "y": 468.2861327849748,
      "width": 297.875,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1963155926,
      "version": 91,
      "versionNonce": 1961516449,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "项目启动==>实例化Flask,执行init方法\n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "项目启动==>实例化Flask,执行init方法\n",
      "lineHeight": 1.2
    },
    {
      "id": "EOobXqR3LO5bzzDWzSPrR",
      "type": "text",
      "x": 1538.5802949957683,
      "y": 491.1236017125316,
      "width": 787.5,
      "height": 1152,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2049155222,
      "version": 114,
      "versionNonce": 1806469359,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "    def __init__(\n        self,\n        import_name: str,\n        static_url_path: t.Optional[str] = None,\n        static_folder: t.Optional[t.Union[str, os.PathLike]] = \"static\",\n        static_host: t.Optional[str] = None,\n        host_matching: bool = False,\n        subdomain_matching: bool = False,\n        template_folder: t.Optional[t.Union[str, os.PathLike]] = \"templates\",\n        instance_path: t.Optional[str] = None,\n        instance_relative_config: bool = False,\n        root_path: t.Optional[str] = None,\n    ):\n        super().__init__(\n            import_name=import_name,\n            static_folder=static_folder,\n            static_url_path=static_url_path,\n            template_folder=template_folder,\n            root_path=root_path,\n        )\n\n        if instance_path is None:\n            instance_path = self.auto_find_instance_path()\n        elif not os.path.isabs(instance_path):\n            raise ValueError(。。。。。。)\n\n        self.instance_path = instance_path\n        self.config = self.make_config(instance_relative_config)\n        self.aborter = self.make_aborter()\n\n        self.json: JSONProvider = self.json_provider_class(self)\n \n        self.url_build_error_handlers: t.List[\n            t.Callable[[Exception, str, t.Dict[str, t.Any]], str]\n        ] = []\n\n        self.before_first_request_funcs: t.List[ft.BeforeFirstRequestCallable] = []\n        self.teardown_appcontext_funcs: t.List[ft.TeardownCallable] = []\n        self.shell_context_processors: t.List[ft.ShellContextProcessorCallable] = []\n        self.blueprints: t.Dict[str, \"Blueprint\"] = {}\n        self.extensions: dict = {}\n        self.url_map = self.url_map_class()\n\n        self.url_map.host_matching = host_matching\n        self.subdomain_matching = subdomain_matching\n        self._got_first_request = False\n        self._before_request_lock = Lock()\n        if self.has_static_folder:\n            assert (\n                bool(static_host) == host_matching\n            ), \"Invalid static_host/host_matching combination\"\n            self_ref = weakref.ref(self)\n            self.add_url_rule(\n                f\"{self.static_url_path}/<path:filename>\",\n                endpoint=\"static\",\n                host=static_host,\n                view_func=lambda **kw: self_ref().send_static_file(**kw), \n            )\n\n        self.cli.name = self.name",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def __init__(\n        self,\n        import_name: str,\n        static_url_path: t.Optional[str] = None,\n        static_folder: t.Optional[t.Union[str, os.PathLike]] = \"static\",\n        static_host: t.Optional[str] = None,\n        host_matching: bool = False,\n        subdomain_matching: bool = False,\n        template_folder: t.Optional[t.Union[str, os.PathLike]] = \"templates\",\n        instance_path: t.Optional[str] = None,\n        instance_relative_config: bool = False,\n        root_path: t.Optional[str] = None,\n    ):\n        super().__init__(\n            import_name=import_name,\n            static_folder=static_folder,\n            static_url_path=static_url_path,\n            template_folder=template_folder,\n            root_path=root_path,\n        )\n\n        if instance_path is None:\n            instance_path = self.auto_find_instance_path()\n        elif not os.path.isabs(instance_path):\n            raise ValueError(。。。。。。)\n\n        self.instance_path = instance_path\n        self.config = self.make_config(instance_relative_config)\n        self.aborter = self.make_aborter()\n\n        self.json: JSONProvider = self.json_provider_class(self)\n \n        self.url_build_error_handlers: t.List[\n            t.Callable[[Exception, str, t.Dict[str, t.Any]], str]\n        ] = []\n\n        self.before_first_request_funcs: t.List[ft.BeforeFirstRequestCallable] = []\n        self.teardown_appcontext_funcs: t.List[ft.TeardownCallable] = []\n        self.shell_context_processors: t.List[ft.ShellContextProcessorCallable] = []\n        self.blueprints: t.Dict[str, \"Blueprint\"] = {}\n        self.extensions: dict = {}\n        self.url_map = self.url_map_class()\n\n        self.url_map.host_matching = host_matching\n        self.subdomain_matching = subdomain_matching\n        self._got_first_request = False\n        self._before_request_lock = Lock()\n        if self.has_static_folder:\n            assert (\n                bool(static_host) == host_matching\n            ), \"Invalid static_host/host_matching combination\"\n            self_ref = weakref.ref(self)\n            self.add_url_rule(\n                f\"{self.static_url_path}/<path:filename>\",\n                endpoint=\"static\",\n                host=static_host,\n                view_func=lambda **kw: self_ref().send_static_file(**kw), \n            )\n\n        self.cli.name = self.name",
      "lineHeight": 1.2
    },
    {
      "id": "p8MLQ-2MdHbrWDOoM-rAl",
      "type": "rectangle",
      "x": 1560.91963056962,
      "y": 437.2058908507114,
      "width": 779.8198269080435,
      "height": 1225.278724342008,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 648036938,
      "version": 98,
      "versionNonce": 1508901249,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false
    },
    {
      "id": "NHOposUJCzpzwPeAOJw7u",
      "type": "text",
      "x": 1834.6005204765286,
      "y": 1490.26545510419,
      "width": 176,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1332816982,
      "version": 74,
      "versionNonce": 2116784911,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "自己添加静态文件夹路由",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "自己添加静态文件夹路由",
      "lineHeight": 1.2
    },
    {
      "id": "j7n8jCEK05Y7fe5qykNZC",
      "type": "text",
      "x": 2096.8292312804933,
      "y": 1478.3010740646248,
      "width": 232.25,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1394864138,
      "version": 86,
      "versionNonce": 2052467041,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "默认添加了一个static静态路由",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "默认添加了一个static静态路由",
      "lineHeight": 1.2
    },
    {
      "id": "JWiVJ-FSwDJ5y9c3fG_nW",
      "type": "text",
      "x": 1748.6261337823144,
      "y": 495.8079948106224,
      "width": 476.125,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1733478666,
      "version": 150,
      "versionNonce": 478435631,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "将一些初始化的值封装到APP中，并处理了一个添加静态文件的路由",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "将一些初始化的值封装到APP中，并处理了一个添加静态文件的路由",
      "lineHeight": 1.2
    },
    {
      "id": "8bUMHDsvKcv-sz5KOAIIK",
      "type": "text",
      "x": 1869.752411941769,
      "y": 1531.452851761002,
      "width": 120.25,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1987804746,
      "version": 74,
      "versionNonce": 527193409,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "端点写死static",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "端点写死static",
      "lineHeight": 1.2
    },
    {
      "id": "rGLNuIyQaffnOSht5-p9X",
      "type": "text",
      "x": 1602.9611218636583,
      "y": 444.9160053535621,
      "width": 252.125,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1655546134,
      "version": 103,
      "versionNonce": 471817039,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "第一步，项目启动，初始化app对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "第一步，项目启动，初始化app对象",
      "lineHeight": 1.2
    },
    {
      "id": "np3InqQqx9HkBhz_Renu-",
      "type": "text",
      "x": 1574.2007842171647,
      "y": 1680.4177137696017,
      "width": 160,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 988475222,
      "version": 69,
      "versionNonce": 1016202529,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "第二部，加载配置对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "第二部，加载配置对象",
      "lineHeight": 1.2
    },
    {
      "id": "pr1yaFKeNng1mbElhImUm",
      "type": "text",
      "x": 1535.9635421492194,
      "y": 1749.6812416810883,
      "width": 571.875,
      "height": 115.19999999999999,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 57541910,
      "version": 43,
      "versionNonce": 290789743,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156961,
      "link": null,
      "locked": false,
      "text": "    def from_object(self, obj: t.Union[object, str]) -> None:\n        if isinstance(obj, str):\n            obj = import_string(obj)\n        for key in dir(obj):\n            if key.isupper():\n                self[key] = getattr(obj, key)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_object(self, obj: t.Union[object, str]) -> None:\n        if isinstance(obj, str):\n            obj = import_string(obj)\n        for key in dir(obj):\n            if key.isupper():\n                self[key] = getattr(obj, key)",
      "lineHeight": 1.2
    },
    {
      "id": "M24zjdJ6TlK66nLPxL6_g",
      "type": "text",
      "x": 1538.1575742343455,
      "y": 1876.443404703814,
      "width": 759.375,
      "height": 268.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1717534666,
      "version": 45,
      "versionNonce": 758561025,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "ldzkwnGvsB92DRlbqDQIf",
          "type": "arrow"
        }
      ],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "    def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n        filename = os.path.join(self.root_path, filename)\n        d = types.ModuleType(\"config\")\n        d.__file__ = filename\n        try:\n            with open(filename, mode=\"rb\") as config_file:\n                exec(compile(config_file.read(), filename, \"exec\"), d.__dict__)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR, errno.ENOTDIR):\n                return False\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n        self.from_object(d)\n        return True",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n        filename = os.path.join(self.root_path, filename)\n        d = types.ModuleType(\"config\")\n        d.__file__ = filename\n        try:\n            with open(filename, mode=\"rb\") as config_file:\n                exec(compile(config_file.read(), filename, \"exec\"), d.__dict__)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR, errno.ENOTDIR):\n                return False\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n        self.from_object(d)\n        return True",
      "lineHeight": 1.2
    },
    {
      "id": "60RcI42WnQUGlZRilwaY_",
      "type": "text",
      "x": 1539.2640110529608,
      "y": 2155.826007611778,
      "width": 712.5,
      "height": 364.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2009314314,
      "version": 46,
      "versionNonce": 1903039375,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "    def from_file(\n        self,\n        filename: str,\n        load: t.Callable[[t.IO[t.Any]], t.Mapping],\n        silent: bool = False,\n    ) -> bool:\n        filename = os.path.join(self.root_path, filename)\n\n        try:\n            with open(filename) as f:\n                obj = load(f)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                return False\n\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n\n        return self.from_mapping(obj)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_file(\n        self,\n        filename: str,\n        load: t.Callable[[t.IO[t.Any]], t.Mapping],\n        silent: bool = False,\n    ) -> bool:\n        filename = os.path.join(self.root_path, filename)\n\n        try:\n            with open(filename) as f:\n                obj = load(f)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                return False\n\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n\n        return self.from_mapping(obj)",
      "lineHeight": 1.2
    },
    {
      "id": "9FHhPpelSFm8m7N_-MKUh",
      "type": "text",
      "x": 1538.663246581544,
      "y": 2533.014600929143,
      "width": 712.5,
      "height": 230.39999999999998,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 335026710,
      "version": 30,
      "versionNonce": 853143777,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "    def from_envvar(self, variable_name: str, silent: bool = False) -> bool:\n        rv = os.environ.get(variable_name)\n        if not rv:\n            if silent:\n                return False\n            raise RuntimeError(\n                f\"The environment variable {variable_name!r} is not set\"\n                \" and as such configuration could not be loaded. Set\"\n                \" this variable and make it point to a configuration\"\n                \" file\"\n            )\n        return self.from_pyfile(rv, silent=silent)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_envvar(self, variable_name: str, silent: bool = False) -> bool:\n        rv = os.environ.get(variable_name)\n        if not rv:\n            if silent:\n                return False\n            raise RuntimeError(\n                f\"The environment variable {variable_name!r} is not set\"\n                \" and as such configuration could not be loaded. Set\"\n                \" this variable and make it point to a configuration\"\n                \" file\"\n            )\n        return self.from_pyfile(rv, silent=silent)",
      "lineHeight": 1.2
    },
    {
      "id": "WO-3MSa26bP-XEhESlBrp",
      "type": "rectangle",
      "x": 1557.7497106916512,
      "y": 1674.2319767771023,
      "width": 787.4346194099508,
      "height": 1099.127430589354,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 301317514,
      "version": 113,
      "versionNonce": 1956825519,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false
    },
    {
      "id": "ece2AFUVQQyzJqoC6_LPd",
      "type": "text",
      "x": 1841.8424488192954,
      "y": 1769.4617652888678,
      "width": 240,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2044804118,
      "version": 110,
      "versionNonce": 856370369,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "字符串对象则依据字符串路径导入",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "字符串对象则依据字符串路径导入",
      "lineHeight": 1.2
    },
    {
      "id": "S6yrko0wCftOY6AZlq185",
      "type": "text",
      "x": 1799.9477674654615,
      "y": 1805.978782502798,
      "width": 224,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1289444682,
      "version": 127,
      "versionNonce": 941341647,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "返回导入对象的全部方法和属性",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "返回导入对象的全部方法和属性",
      "lineHeight": 1.2
    },
    {
      "id": "vAhBXr8rALLAGx7CNC-fV",
      "type": "text",
      "x": 2007.5007475294615,
      "y": 1675.8389260564147,
      "width": 308.875,
      "height": 76.8,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2084081558,
      "version": 607,
      "versionNonce": 896134305,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "ldzkwnGvsB92DRlbqDQIf",
          "type": "arrow"
        }
      ],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "类对象+[]=xxx   执行__setitem__方法\n类对象+[]       执行__getitem__方法\n类对象.xxx      执行__getattr__方法\n类对象.xxx=xxx  执行__setattr__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "类对象+[]=xxx   执行__setitem__方法\n类对象+[]       执行__getitem__方法\n类对象.xxx      执行__getattr__方法\n类对象.xxx=xxx  执行__setattr__方法",
      "lineHeight": 1.2
    },
    {
      "id": "ldzkwnGvsB92DRlbqDQIf",
      "type": "arrow",
      "x": 1964.6328034325452,
      "y": 1853.3791590224764,
      "width": 162.86691545184567,
      "height": 93.21311158119624,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 272152266,
      "version": 84,
      "versionNonce": 535914991,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          113.18737004019567,
          -38.41201566014547
        ],
        [
          162.86691545184567,
          -93.21311158119624
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "M24zjdJ6TlK66nLPxL6_g",
        "focus": -0.5378320832194979,
        "gap": 23.064245681337525
      },
      "endBinding": {
        "elementId": "vAhBXr8rALLAGx7CNC-fV",
        "focus": -0.038026026958185966,
        "gap": 7.527121384865609
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "kabH_yxltr1Pwou2GBwZc",
      "type": "text",
      "x": 1807.8606496545651,
      "y": 1827.0029366374165,
      "width": 157.75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1060365962,
      "version": 104,
      "versionNonce": 564506753,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "执行_setitem__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "执行_setitem__方法",
      "lineHeight": 1.2
    },
    {
      "id": "qz7rUa5a_-7_Jkk5O1wIB",
      "type": "text",
      "x": 2004.0178239426805,
      "y": 1786.619070389389,
      "width": 345.25,
      "height": 76.8,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1985877526,
      "version": 369,
      "versionNonce": 2032948239,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "app.config对(Config)象执行from_object,\n    Config继承自字典，是一个字典对象。\n所以后续app.config可以拿到所有配置项\n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "app.config对(Config)象执行from_object,\n    Config继承自字典，是一个字典对象。\n所以后续app.config可以拿到所有配置项\n",
      "lineHeight": 1.2
    },
    {
      "id": "AYKRVEJOPIAhiBIvlcSrc",
      "type": "text",
      "x": 1750.1146982956413,
      "y": 1686.6198373310333,
      "width": 248.25,
      "height": 57.599999999999994,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1704518858,
      "version": 210,
      "versionNonce": 1031665761,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "读取配置中的所有键值对，\n将键值对放入Config字典对象中，\n把Config对象赋值给app对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "读取配置中的所有键值对，\n将键值对放入Config字典对象中，\n把Config对象赋值给app对象",
      "lineHeight": 1.2
    },
    {
      "id": "MK7VQocZtI8eRC0iBbtfi",
      "type": "text",
      "x": 1570.0904648486182,
      "y": 1712.8936890528885,
      "width": 108.125,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 678281226,
      "version": 139,
      "versionNonce": 1539635759,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "app中多了一个\nConfig对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "app中多了一个\nConfig对象",
      "lineHeight": 1.2
    },
    {
      "id": "PYhj3NLmQKYCa_JUd2OcV",
      "type": "text",
      "x": 1945.3501368806242,
      "y": 1282.807299421058,
      "width": 376.25,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1844553089,
      "version": 133,
      "versionNonce": 1791116353,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "实例了一个MAP对象，这个对象中放路由和URL的对应\n关系",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "实例了一个MAP对象，这个对象中放路由和URL的对应\n关系",
      "lineHeight": 1.2
    },
    {
      "id": "o82mQwlHCIAdZK5OQIdhd",
      "type": "text",
      "x": 1533.194132061201,
      "y": 2809.2060350937395,
      "width": 778.125,
      "height": 153.6,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 368364673,
      "version": 26,
      "versionNonce": 1285807183,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "    @setupmethod\n    def route(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n        def decorator(f: T_route) -> T_route:\n            endpoint = options.pop(\"endpoint\", None)\n            self.add_url_rule(rule, endpoint, f, **options)\n            return f\n\n        return decorator",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    @setupmethod\n    def route(self, rule: str, **options: t.Any) -> t.Callable[[T_route], T_route]:\n        def decorator(f: T_route) -> T_route:\n            endpoint = options.pop(\"endpoint\", None)\n            self.add_url_rule(rule, endpoint, f, **options)\n            return f\n\n        return decorator",
      "lineHeight": 1.2
    },
    {
      "id": "OkHwnQRNi7ztrLLd7QINz",
      "type": "text",
      "x": 1534.00985297936,
      "y": 2998.843896755715,
      "width": 768.75,
      "height": 979.1999999999999,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1272554031,
      "version": 37,
      "versionNonce": 626136097,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "    @setupmethod\n    def add_url_rule(\n        self,\n        rule: str,\n        endpoint: t.Optional[str] = None,\n        view_func: t.Optional[ft.RouteCallable] = None,\n        provide_automatic_options: t.Optional[bool] = None,\n        **options: t.Any,\n    ) -> None:\n        if endpoint is None:\n            endpoint = _endpoint_from_view_func(view_func)  # type: ignore\n        options[\"endpoint\"] = endpoint\n        methods = options.pop(\"methods\", None)\n\n        if methods is None:\n            methods = getattr(view_func, \"methods\", None) or (\"GET\",)\n        if isinstance(methods, str):\n            raise TypeError(\n                \"Allowed methods must be a list of strings, for\"\n                ' example: @app.route(..., methods=[\"POST\"])'\n            )\n        methods = {item.upper() for item in methods}\n\n        required_methods = set(getattr(view_func, \"required_methods\", ()))\n\n   \n        if provide_automatic_options is None:\n            provide_automatic_options = getattr(\n                view_func, \"provide_automatic_options\", None\n            )\n\n        if provide_automatic_options is None:\n            if \"OPTIONS\" not in methods:\n                provide_automatic_options = True\n                required_methods.add(\"OPTIONS\")\n            else:\n                provide_automatic_options = False\n        methods |= required_methods\n\n        rule = self.url_rule_class(rule, methods=methods, **options)\n        rule.provide_automatic_options = provide_automatic_options  # type: ignore\n\n        self.url_map.add(rule)\n        if view_func is not None:\n            old_func = self.view_functions.get(endpoint)\n            if old_func is not None and old_func != view_func:\n                raise AssertionError(\n                    \"View function mapping is overwriting an existing\"\n                    f\" endpoint function: {endpoint}\"\n                )\n            self.view_functions[endpoint] = view_func",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    @setupmethod\n    def add_url_rule(\n        self,\n        rule: str,\n        endpoint: t.Optional[str] = None,\n        view_func: t.Optional[ft.RouteCallable] = None,\n        provide_automatic_options: t.Optional[bool] = None,\n        **options: t.Any,\n    ) -> None:\n        if endpoint is None:\n            endpoint = _endpoint_from_view_func(view_func)  # type: ignore\n        options[\"endpoint\"] = endpoint\n        methods = options.pop(\"methods\", None)\n\n        if methods is None:\n            methods = getattr(view_func, \"methods\", None) or (\"GET\",)\n        if isinstance(methods, str):\n            raise TypeError(\n                \"Allowed methods must be a list of strings, for\"\n                ' example: @app.route(..., methods=[\"POST\"])'\n            )\n        methods = {item.upper() for item in methods}\n\n        required_methods = set(getattr(view_func, \"required_methods\", ()))\n\n   \n        if provide_automatic_options is None:\n            provide_automatic_options = getattr(\n                view_func, \"provide_automatic_options\", None\n            )\n\n        if provide_automatic_options is None:\n            if \"OPTIONS\" not in methods:\n                provide_automatic_options = True\n                required_methods.add(\"OPTIONS\")\n            else:\n                provide_automatic_options = False\n        methods |= required_methods\n\n        rule = self.url_rule_class(rule, methods=methods, **options)\n        rule.provide_automatic_options = provide_automatic_options  # type: ignore\n\n        self.url_map.add(rule)\n        if view_func is not None:\n            old_func = self.view_functions.get(endpoint)\n            if old_func is not None and old_func != view_func:\n                raise AssertionError(\n                    \"View function mapping is overwriting an existing\"\n                    f\" endpoint function: {endpoint}\"\n                )\n            self.view_functions[endpoint] = view_func",
      "lineHeight": 1.2
    },
    {
      "id": "5hRzakxth_aV6dfR9k0s8",
      "type": "rectangle",
      "x": 1558.5262416558162,
      "y": 2799.495251055337,
      "width": 787.3244249768477,
      "height": 168.06926730662553,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 926471343,
      "version": 78,
      "versionNonce": 530676335,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "G4oBXzceyPmVLebbEjTAM",
          "type": "arrow"
        }
      ],
      "updated": 1681089156962,
      "link": null,
      "locked": false
    },
    {
      "id": "DvBOKS6-TnjlnCUyf_OF9",
      "type": "rectangle",
      "x": 1561.5274695765115,
      "y": 2991.5743921022945,
      "width": 778.3207412147617,
      "height": 995.4102492668958,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 89049455,
      "version": 176,
      "versionNonce": 1092413441,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false
    },
    {
      "id": "R7M1-ro1On6s0Y9s39Szx",
      "type": "text",
      "x": 1956.4062411255475,
      "y": 2849.6231308095057,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1621858383,
      "version": 77,
      "versionNonce": 1747075041,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "对函数进行装饰",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "对函数进行装饰",
      "lineHeight": 1.2
    },
    {
      "id": "2mymHLYwiYv3-sZ7c5Hli",
      "type": "text",
      "x": 2031.4305365643936,
      "y": 2866.7113178410777,
      "width": 315.5,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1790465793,
      "version": 216,
      "versionNonce": 1376447151,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "endpoint在add_url_rule中是必须参数，\n        所以不使用get()",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "endpoint在add_url_rule中是必须参数，\n        所以不使用get()",
      "lineHeight": 1.2
    },
    {
      "id": "G4oBXzceyPmVLebbEjTAM",
      "type": "arrow",
      "x": 1643.6771889431693,
      "y": 2895.2555286811203,
      "width": 57.96339540612507,
      "height": 101.1625694618815,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 1088914753,
      "version": 52,
      "versionNonce": 1483840449,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -57.96339540612507,
          32.26270461795275
        ],
        [
          -54.13564349355943,
          101.1625694618815
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "5hRzakxth_aV6dfR9k0s8",
        "focus": -0.9261610293756403,
        "gap": 28.853579781039343
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "rKvRVKuwDgJEurO1A0xYp",
      "type": "text",
      "x": 1899.7551548670174,
      "y": 3207.9024720536345,
      "width": 188.625,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1981058767,
      "version": 103,
      "versionNonce": 1440201935,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "endpoint放到options中",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "endpoint放到options中",
      "lineHeight": 1.2
    },
    {
      "id": "eiWVXwvgpZzwtNI6-bW2l",
      "type": "text",
      "x": 1841.9831539402232,
      "y": 3173.889930122848,
      "width": 132.375,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 563851969,
      "version": 91,
      "versionNonce": 142953199,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "endpoint=函数名",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "endpoint=函数名",
      "lineHeight": 1.2
    },
    {
      "id": "TDnDve6XYy_snKKH5W1-I",
      "type": "text",
      "x": 1791.5385795516622,
      "y": 3267.4789668954013,
      "width": 80,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1675628769,
      "version": 63,
      "versionNonce": 628907905,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "支持的方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "支持的方法",
      "lineHeight": 1.2
    },
    {
      "id": "kRdsChCmOPdn5JvQXOI9D",
      "type": "text",
      "x": 1715.1745227574968,
      "y": 3730.557372708707,
      "width": 371.25,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1538066625,
      "version": 147,
      "versionNonce": 1184634127,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "Rule对象存了rul，请求的方法，还有options参数",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Rule对象存了rul，请求的方法，还有options参数",
      "lineHeight": 1.2
    },
    {
      "id": "JE56aysTwcEtzDC7n2qVV",
      "type": "text",
      "x": 1708.9134368898242,
      "y": 2808.775044224932,
      "width": 75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1660406305,
      "version": 59,
      "versionNonce": 279365473,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "rule:url",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "rule:url",
      "lineHeight": 1.2
    },
    {
      "type": "text",
      "version": 102,
      "versionNonce": 1200921391,
      "isDeleted": false,
      "id": "ExwxUT1cAi2FYpE7VJkl4",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1708.706861828846,
      "y": 3056.510745298672,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 75,
      "height": 19.2,
      "seed": 758150721,
      "groupIds": [],
      "roundness": null,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "rule:url",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "rule:url",
      "lineHeight": 1.2
    },
    {
      "id": "dkQurbJXgYsXBLKh_2oSB",
      "type": "text",
      "x": 2099.428195753054,
      "y": 3729.27229549034,
      "width": 75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1502335055,
      "version": 67,
      "versionNonce": 502870849,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089156962,
      "link": null,
      "locked": false,
      "text": "endpoint",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "endpoint",
      "lineHeight": 1.2
    },
    {
      "id": "LHGcscsBSSN2LXgwKrr1X",
      "type": "text",
      "x": 2033.3991654946583,
      "y": 3705.731573042139,
      "width": 251,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1876566977,
      "version": 101,
      "versionNonce": 1069513551,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "MJi84d8SpQGyvMmYT9GP6",
          "type": "arrow"
        }
      ],
      "updated": 1681089396046,
      "link": null,
      "locked": false,
      "text": "没有函数，但endpoint对应了函数",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "没有函数，但endpoint对应了函数",
      "lineHeight": 1.2
    },
    {
      "id": "OCyD29zKB73L_x3Woi7MO",
      "type": "text",
      "x": 1820.2468978721838,
      "y": 3807.058194914877,
      "width": 177.625,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1207052449,
      "version": 121,
      "versionNonce": 797109505,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089205737,
      "link": null,
      "locked": false,
      "text": "将rule添加到Map对象中",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "将rule添加到Map对象中",
      "lineHeight": 1.2
    },
    {
      "id": "Gs3bg5z6tYMWg6zqQ7CZ9",
      "type": "arrow",
      "x": 1611.4145669296531,
      "y": 3764.4331767623025,
      "width": 26.247614762127114,
      "height": 54.68242979345314,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 808394639,
      "version": 74,
      "versionNonce": 1776544847,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089212618,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -26.247614762127114,
          28.98165640084426
        ],
        [
          -2.187310408448184,
          54.68242979345314
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "AB1OeipkejiU2Qnz5-FT1",
      "type": "text",
      "x": 1844.0063293333785,
      "y": 3825.0759572050056,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 288305121,
      "version": 73,
      "versionNonce": 380530543,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089258290,
      "link": null,
      "locked": false,
      "text": "函数名称不为空",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "函数名称不为空",
      "lineHeight": 1.2
    },
    {
      "id": "qiLI42AO_H2krEloj4VZN",
      "type": "text",
      "x": 1962.7766952671227,
      "y": 3941.0849394315564,
      "width": 337,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1746837423,
      "version": 120,
      "versionNonce": 200358255,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "MJi84d8SpQGyvMmYT9GP6",
          "type": "arrow"
        }
      ],
      "updated": 1681089396046,
      "link": null,
      "locked": false,
      "text": "函数放到了view_functions[endpoint]中了",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "函数放到了view_functions[endpoint]中了",
      "lineHeight": 1.2
    },
    {
      "id": "MJi84d8SpQGyvMmYT9GP6",
      "type": "arrow",
      "x": 2288.383448679469,
      "y": 3716.5860438093273,
      "width": 30.62234571827139,
      "height": 222.010794925734,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 1523668801,
      "version": 73,
      "versionNonce": 1736044161,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089398915,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          26.247614762126886,
          87.49192071129983
        ],
        [
          -4.374730956144504,
          222.010794925734
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "LHGcscsBSSN2LXgwKrr1X",
        "focus": -1.005670175636517,
        "gap": 3.9842831848103515
      },
      "endBinding": {
        "elementId": "qiLI42AO_H2krEloj4VZN",
        "focus": 0.8786941638582833,
        "gap": 2.4881006964951666
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "dfosQ2umIxiP-bPJoD6TL",
      "type": "text",
      "x": 2058.41627703612,
      "y": 3842.2737052541656,
      "width": 224,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 455017025,
      "version": 160,
      "versionNonce": 1732967425,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089456603,
      "link": null,
      "locked": false,
      "text": "利用端点获取已存在的函数名称",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "利用端点获取已存在的函数名称",
      "lineHeight": 1.2
    },
    {
      "id": "1Oiq8bcDzd6HygDfb85SZ",
      "type": "text",
      "x": 1900.3566528386732,
      "y": 3880.4694184528926,
      "width": 80,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1898622913,
      "version": 56,
      "versionNonce": 828640335,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681089462875,
      "link": null,
      "locked": false,
      "text": "存在就报错",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "存在就报错",
      "lineHeight": 1.2
    },
    {
      "id": "VVeHeTLeSjzWe4nAP3laE",
      "type": "text",
      "x": 1802.4477017151435,
      "y": 2805.903123877507,
      "width": 128,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 857557505,
      "version": 116,
      "versionNonce": 1172636111,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681091919591,
      "link": null,
      "locked": false,
      "text": "第三步，路由映射",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "第三步，路由映射",
      "lineHeight": 1.2
    },
    {
      "id": "WIi5_iy0NqKTlBQwToGFd",
      "type": "text",
      "x": 1584.276813186226,
      "y": 4007.6042825435707,
      "width": 216.75,
      "height": 57.599999999999994,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 207003201,
      "version": 141,
      "versionNonce": 1081960705,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092046607,
      "link": null,
      "locked": false,
      "text": "app.config：配置信息\napp.url_map：路由对应关系\napp.view_functions：函数",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "app.config：配置信息\napp.url_map：路由对应关系\napp.view_functions：函数",
      "lineHeight": 1.2
    },
    {
      "id": "Rn5yIT_HVk2cfkkC0YfEv",
      "type": "text",
      "x": 1997.6318023591843,
      "y": 3794.6218872922395,
      "width": 223.375,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1214635201,
      "version": 99,
      "versionNonce": 199981697,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092096002,
      "link": null,
      "locked": false,
      "text": "利用endpoint去找view_func",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "利用endpoint去找view_func",
      "lineHeight": 1.2
    },
    {
      "id": "rNCM2pUIZo-AJBFbYexqF",
      "type": "text",
      "x": 1518.4922553358438,
      "y": 4084.237496640385,
      "width": 843.75,
      "height": 806.4,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 204345391,
      "version": 99,
      "versionNonce": 1928131201,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092266735,
      "link": null,
      "locked": false,
      "text": "    def run(self,host= None,port:= None,debug= None,load_dotenv= True,**options,) -> None:\n        if os.environ.get(\"FLASK_RUN_FROM_CLI\") == \"true\":\n            if not is_running_from_reloader():\n                click.secho(.........)\n            return\n        if get_load_dotenv(load_dotenv):\n            cli.load_dotenv()\n            if \"FLASK_ENV\" in os.environ:\n                print(......)\n                self.config[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"production\"\n                self.debug = get_debug_flag()\n            elif \"FLASK_DEBUG\" in os.environ:\n                self.debug = get_debug_flag()\n        if debug is not None:\n            self.debug = bool(debug)\n\n        server_name = self.config.get(\"SERVER_NAME\")\n        sn_host = sn_port = None\n        if server_name:\n            sn_host, _, sn_port = server_name.partition(\":\")\n        if not host:\n            if sn_host:\n                host = sn_host\n            else:\n                host = \"127.0.0.1\"\n        if port or port == 0:\n            port = int(port)\n        elif sn_port:\n            port = int(sn_port)\n        else:\n            port = 5000\n        options.setdefault(\"use_reloader\", self.debug)\n        options.setdefault(\"use_debugger\", self.debug)\n        options.setdefault(\"threaded\", True)\n        cli.show_server_banner(self.debug, self.name)\n        from werkzeug.serving import run_simple\n\n        try:\n            run_simple(t.cast(str, host), port, self, **options)\n        finally:\n   \n            self._got_first_request = False",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def run(self,host= None,port:= None,debug= None,load_dotenv= True,**options,) -> None:\n        if os.environ.get(\"FLASK_RUN_FROM_CLI\") == \"true\":\n            if not is_running_from_reloader():\n                click.secho(.........)\n            return\n        if get_load_dotenv(load_dotenv):\n            cli.load_dotenv()\n            if \"FLASK_ENV\" in os.environ:\n                print(......)\n                self.config[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"production\"\n                self.debug = get_debug_flag()\n            elif \"FLASK_DEBUG\" in os.environ:\n                self.debug = get_debug_flag()\n        if debug is not None:\n            self.debug = bool(debug)\n\n        server_name = self.config.get(\"SERVER_NAME\")\n        sn_host = sn_port = None\n        if server_name:\n            sn_host, _, sn_port = server_name.partition(\":\")\n        if not host:\n            if sn_host:\n                host = sn_host\n            else:\n                host = \"127.0.0.1\"\n        if port or port == 0:\n            port = int(port)\n        elif sn_port:\n            port = int(sn_port)\n        else:\n            port = 5000\n        options.setdefault(\"use_reloader\", self.debug)\n        options.setdefault(\"use_debugger\", self.debug)\n        options.setdefault(\"threaded\", True)\n        cli.show_server_banner(self.debug, self.name)\n        from werkzeug.serving import run_simple\n\n        try:\n            run_simple(t.cast(str, host), port, self, **options)\n        finally:\n   \n            self._got_first_request = False",
      "lineHeight": 1.2
    },
    {
      "id": "TMCula--e9pZJn-HjnzLh",
      "type": "rectangle",
      "x": 1557.9470167592094,
      "y": 4066.795710286052,
      "width": 804.9494772817229,
      "height": 829.9479191990422,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 680327777,
      "version": 107,
      "versionNonce": 971962305,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092279846,
      "link": null,
      "locked": false
    },
    {
      "id": "my96ff0CQAhxu75Clwq9l",
      "type": "text",
      "x": 1841.5824396748571,
      "y": 4627.658843335458,
      "width": 117.5,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 191656705,
      "version": 66,
      "versionNonce": 331969775,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092318636,
      "link": null,
      "locked": false,
      "text": "默认端口是5000",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "默认端口是5000",
      "lineHeight": 1.2
    },
    {
      "id": "ERPb8ZkHsbOv70XyyydCF",
      "type": "rectangle",
      "x": 1574.1673542734559,
      "y": 4562.911933471096,
      "width": 248.4218140162186,
      "height": 116.34945519313806,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 2137511297,
      "version": 42,
      "versionNonce": 1254031759,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092322238,
      "link": null,
      "locked": false
    },
    {
      "id": "RdNcEo_dXNzvYQZo_c786",
      "type": "rectangle",
      "x": 1572.2806121715503,
      "y": 4431.468509794275,
      "width": 511.30866136986015,
      "height": 133.95910092498616,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 296089519,
      "version": 85,
      "versionNonce": 288652527,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092332998,
      "link": null,
      "locked": false
    },
    {
      "id": "GD3pXCOlSeZooL1GQp5Lf",
      "type": "text",
      "x": 1853.437487160613,
      "y": 4470.68144443141,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 242087265,
      "version": 60,
      "versionNonce": 1599209711,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092343449,
      "link": null,
      "locked": false,
      "text": "端口和地址切割",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "端口和地址切割",
      "lineHeight": 1.2
    },
    {
      "id": "SzUM55jGFmJVnS2tbWUNP",
      "type": "rectangle",
      "x": 1600.581870373883,
      "y": 4216.379276808283,
      "width": 694.3232152865796,
      "height": 118.2361972950439,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 2004748673,
      "version": 68,
      "versionNonce": 128472367,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092377365,
      "link": null,
      "locked": false
    },
    {
      "id": "SnSlZZ_2AQhHw1_PqBGcD",
      "type": "text",
      "x": 1984.943836020496,
      "y": 4756.963919183432,
      "width": 366.875,
      "height": 57.599999999999994,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1370534721,
      "version": 254,
      "versionNonce": 1272671087,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681092922977,
      "link": null,
      "locked": false,
      "text": "内部调用workzeug的run_simple方法\n内部创建soket监听端口，等待用户到来，一旦用户\n到来，执行flask的__call__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "内部调用workzeug的run_simple方法\n内部创建soket监听端口，等待用户到来，一旦用户\n到来，执行flask的__call__方法",
      "lineHeight": 1.2
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}