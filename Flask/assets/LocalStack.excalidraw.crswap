{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "3Hp9CSaCZ0Vv9yv32o10p",
      "type": "text",
      "x": 429.3939208984375,
      "y": 304.59392089843755,
      "width": 703.125,
      "height": 844.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 661358550,
      "version": 41,
      "versionNonce": 2034795606,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "\nclass Local:\n    __slots__ = (\"__storage\",)\n\n\n\n    def __init__(self, context_var = None) -> None:\n        if context_var is None:\n            context_var = ContextVar(f\"werkzeug.Local<{id(self)}>.storage\")\n        object.__setattr__(self, \"_Local__storage\", context_var)\n\n\n    def __iter__(self) -> t.Iterator[t.Tuple[str, t.Any]]:\n        return iter(self.__storage.get({}).items())\n\n    def __call__(self, name= None ) -> \"LocalProxy\":\n        return LocalProxy(self, name, unbound_message=unbound_message)\n\n    def __release_local__(self) -> None:\n        self.__storage.set({})\n\n    def __getattr__(self, name: str) -> t.Any:\n        values = self.__storage.get({})\n\n        if name in values:\n            return values[name]\n\n        raise AttributeError(name)\n\n    def __setattr__(self, name: str, value: t.Any) -> None:\n        values = self.__storage.get({}).copy()\n        values[name] = value\n        self.__storage.set(values)\n\n    def __delattr__(self, name: str) -> None:\n        values = self.__storage.get({})\n\n        if name in values:\n            values = values.copy()\n            del values[name]\n            self.__storage.set(values)\n        else:\n            raise AttributeError(name)\n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "\nclass Local:\n    __slots__ = (\"__storage\",)\n\n\n\n    def __init__(self, context_var = None) -> None:\n        if context_var is None:\n            context_var = ContextVar(f\"werkzeug.Local<{id(self)}>.storage\")\n        object.__setattr__(self, \"_Local__storage\", context_var)\n\n\n    def __iter__(self) -> t.Iterator[t.Tuple[str, t.Any]]:\n        return iter(self.__storage.get({}).items())\n\n    def __call__(self, name= None ) -> \"LocalProxy\":\n        return LocalProxy(self, name, unbound_message=unbound_message)\n\n    def __release_local__(self) -> None:\n        self.__storage.set({})\n\n    def __getattr__(self, name: str) -> t.Any:\n        values = self.__storage.get({})\n\n        if name in values:\n            return values[name]\n\n        raise AttributeError(name)\n\n    def __setattr__(self, name: str, value: t.Any) -> None:\n        values = self.__storage.get({}).copy()\n        values[name] = value\n        self.__storage.set(values)\n\n    def __delattr__(self, name: str) -> None:\n        values = self.__storage.get({})\n\n        if name in values:\n            values = values.copy()\n            del values[name]\n            self.__storage.set(values)\n        else:\n            raise AttributeError(name)\n",
      "lineHeight": 1.2
    },
    {
      "id": "hEPBvlRx5_bR0CwtHkhMu",
      "type": "rectangle",
      "x": 418.432867140997,
      "y": 310.2626368204752,
      "width": 722.2221883138019,
      "height": 843.1818072001139,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 2127022806,
      "version": 86,
      "versionNonce": 11605002,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681022283357,
      "link": null,
      "locked": false
    },
    {
      "id": "TPKdapk1ngLpNulbsALDL",
      "type": "text",
      "x": 427.9296377272831,
      "y": 366.9978445143927,
      "width": 715,
      "height": 57.599999999999994,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1559480330,
      "version": 549,
      "versionNonce": 321382102,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "用于指定一个类实例可以拥有的是姓名，当使用__solts__属性来定义一个类时，会为该类的实例分\n配一个固定的内存空间，而不是使用默认的__dict__字典来存储实例的属性。这种方式可以提高内存\n使用效率和访问速度，因为它减少了额外的内存分配和属性访问的开销。",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "用于指定一个类实例可以拥有的是姓名，当使用__solts__属性来定义一个类时，会为该类的实例分\n配一个固定的内存空间，而不是使用默认的__dict__字典来存储实例的属性。这种方式可以提高内存\n使用效率和访问速度，因为它减少了额外的内存分配和属性访问的开销。",
      "lineHeight": 1.2
    },
    {
      "id": "T39NWAtFA7ID_QCplRBZd",
      "type": "text",
      "x": 547.134197053455,
      "y": 325.3311842055548,
      "width": 584.75,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1029198678,
      "version": 319,
      "versionNonce": 175152150,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "利用__slots__来限制只能拥有__storage属性，该属性用于存储本地线程上下文\n                  中的数据，意味着不能随意再Local实例上添加其他属性。",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "利用__slots__来限制只能拥有__storage属性，该属性用于存储本地线程上下文\n                  中的数据，意味着不能随意再Local实例上添加其他属性。",
      "lineHeight": 1.2
    },
    {
      "id": "GsY5cXbef44416Z-odF4i",
      "type": "rectangle",
      "x": 491.86896115257605,
      "y": 478.6645238967169,
      "width": 550.7575607299805,
      "height": 21.969680786132816,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1033017354,
      "version": 81,
      "versionNonce": 126310474,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false
    },
    {
      "id": "b4i3sN-jrUQHYz18-7nwv",
      "type": "text",
      "x": 425.16451626732214,
      "y": 503.247920808338,
      "width": 699.5,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 966186838,
      "version": 489,
      "versionNonce": 1917435658,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "使用__slots__限制属性后，并不会完全限制属性的添加，可以使用__setattr__的方法设置属性\n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "使用__slots__限制属性后，并不会完全限制属性的添加，可以使用__setattr__的方法设置属性\n",
      "lineHeight": 1.2
    },
    {
      "id": "TPv0wFlTB_R2zC5ilDm4k",
      "type": "text",
      "x": 727.1719625563846,
      "y": 440.8615224929083,
      "width": 208,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1529296074,
      "version": 126,
      "versionNonce": 227626442,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "存储任意类型的本地数据对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "存储任意类型的本地数据对象",
      "lineHeight": 1.2
    },
    {
      "id": "lCCg9ZyJ0lODo2fE6cO51",
      "type": "text",
      "x": 813.4218481154667,
      "y": 734.2705839247931,
      "width": 331,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1149097034,
      "version": 200,
      "versionNonce": 619634966,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "获取_storage中的本地数据字典，如果不存在\n则返回以一个空字典",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取_storage中的本地数据字典，如果不存在\n则返回以一个空字典",
      "lineHeight": 1.2
    },
    {
      "id": "T83SFBMnDAoKeo_xexG_a",
      "type": "text",
      "x": 727.24772244408,
      "y": 787.9447858901251,
      "width": 128,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1033163862,
      "version": 100,
      "versionNonce": 903761494,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "键存在，则返回值",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "键存在，则返回值",
      "lineHeight": 1.2
    },
    {
      "id": "oqJQWgIn3gcBWoRC01Lis",
      "type": "text",
      "x": 867.171809968494,
      "y": 881.8463438124884,
      "width": 176,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1517198858,
      "version": 121,
      "versionNonce": 1760433046,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "获取原本地数据，的副本",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取原本地数据，的副本",
      "lineHeight": 1.2
    },
    {
      "id": "wU1SIMhvqofAc9HPu9ZSx",
      "type": "text",
      "x": 698.7248495192753,
      "y": 903.5130231948126,
      "width": 96,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1150759370,
      "version": 76,
      "versionNonce": 1935612106,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "进行数据添加",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "进行数据添加",
      "lineHeight": 1.2
    },
    {
      "id": "3mhmtRAnh-_xas_3-NsV8",
      "type": "text",
      "x": 756.5658071608768,
      "y": 924.1569059462774,
      "width": 192,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 587593558,
      "version": 92,
      "versionNonce": 1213411542,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "并设置回原来的数据副本中",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "并设置回原来的数据副本中",
      "lineHeight": 1.2
    },
    {
      "id": "vT3GkAnu7tesb9Udb58KV",
      "type": "text",
      "x": 435.4294469924198,
      "y": 840.899345216297,
      "width": 389.5,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2094280906,
      "version": 292,
      "versionNonce": 1336059414,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "使用copy是为了避免多个线程同时修改，造成数据混乱",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "使用copy是为了避免多个线程同时修改，造成数据混乱",
      "lineHeight": 1.2
    },
    {
      "id": "Yzk3sGuONiKcXusOt8xor",
      "type": "text",
      "x": 810.3915670485721,
      "y": 981.4296644301642,
      "width": 192,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1610869130,
      "version": 105,
      "versionNonce": 1842540106,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "从本地数据中获取字典对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "从本地数据中获取字典对象",
      "lineHeight": 1.2
    },
    {
      "id": "FBXcny341hGPkUP6EPChQ",
      "type": "text",
      "x": 747.6263692946659,
      "y": 1035.0659864516485,
      "width": 144,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1685719446,
      "version": 98,
      "versionNonce": 1070691158,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "找到该键并产生副本",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "找到该键并产生副本",
      "lineHeight": 1.2
    },
    {
      "id": "1g9zDCQAQPn7XY0G4qrud",
      "type": "text",
      "x": 788.3840444655643,
      "y": 1073.7781065078009,
      "width": 240,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1075813654,
      "version": 106,
      "versionNonce": 1991415050,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "删除该数据，重新将数据设置回去",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "删除该数据，重新将数据设置回去",
      "lineHeight": 1.2
    },
    {
      "id": "_fuDTNpnbC8YMjSoiX0nH",
      "type": "text",
      "x": 419.31026683328446,
      "y": 1222.8896981937025,
      "width": 750,
      "height": 748.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 600097610,
      "version": 41,
      "versionNonce": 2054120394,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "class LocalStack(t.Generic[T]):\n    __slots__ = (\"_storage\",)\n\n    def __init__(self, context_var = None) -> None:\n        if context_var is None:\n            context_var = ContextVar(f\"werkzeug.LocalStack<{id(self)}>.storage\")\n        self._storage = context_var\n\n    def __release_local__(self) -> None:\n        self._storage.set([])\n\n    def push(self, obj: T) -> t.List[T]:\n        stack = self._storage.get([]).copy()\n        stack.append(obj)\n        self._storage.set(stack)\n        return stack\n\n    def pop(self) -> t.Optional[T]:\n        stack = self._storage.get([])\n\n        if len(stack) == 0:\n            return None\n\n        rv = stack[-1]\n        self._storage.set(stack[:-1])\n        return rv\n\n    @property\n    def top(self) -> t.Optional[T]:\n        stack = self._storage.get([])\n\n        if len(stack) == 0:\n            return None\n\n        return stack[-1]\n\n    def __call__(self, name = None, *, unbound_message = None\n    ) -> \"LocalProxy\":\n        return LocalProxy(self, name, unbound_message=unbound_message)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class LocalStack(t.Generic[T]):\n    __slots__ = (\"_storage\",)\n\n    def __init__(self, context_var = None) -> None:\n        if context_var is None:\n            context_var = ContextVar(f\"werkzeug.LocalStack<{id(self)}>.storage\")\n        self._storage = context_var\n\n    def __release_local__(self) -> None:\n        self._storage.set([])\n\n    def push(self, obj: T) -> t.List[T]:\n        stack = self._storage.get([]).copy()\n        stack.append(obj)\n        self._storage.set(stack)\n        return stack\n\n    def pop(self) -> t.Optional[T]:\n        stack = self._storage.get([])\n\n        if len(stack) == 0:\n            return None\n\n        rv = stack[-1]\n        self._storage.set(stack[:-1])\n        return rv\n\n    @property\n    def top(self) -> t.Optional[T]:\n        stack = self._storage.get([])\n\n        if len(stack) == 0:\n            return None\n\n        return stack[-1]\n\n    def __call__(self, name = None, *, unbound_message = None\n    ) -> \"LocalProxy\":\n        return LocalProxy(self, name, unbound_message=unbound_message)",
      "lineHeight": 1.2
    },
    {
      "id": "3Kq6UBJE5ZYK_S6Gea98B",
      "type": "rectangle",
      "x": 419.4951894850959,
      "y": 1183.6013334365107,
      "width": 755.5555725097653,
      "height": 818.1818389892578,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1150761674,
      "version": 106,
      "versionNonce": 830543318,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false
    },
    {
      "id": "JJixraVniwhWzhbB77QJn",
      "type": "text",
      "x": 734.0406810215541,
      "y": 1481.0128833225783,
      "width": 316.125,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1866444682,
      "version": 206,
      "versionNonce": 63695638,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "获取列表对象的副本。将obj添加到列表最后\n设置回去",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取列表对象的副本。将obj添加到列表最后\n设置回去",
      "lineHeight": 1.2
    },
    {
      "id": "QaMitlxf5vJs_jeTDE_J4",
      "type": "text",
      "x": 696.1997996738978,
      "y": 1606.5432025364455,
      "width": 238.875,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1707235990,
      "version": 183,
      "versionNonce": 1603041610,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "获取栈对象，长度为0，返回None",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取栈对象，长度为0，返回None",
      "lineHeight": 1.2
    },
    {
      "id": "yAacg1i2yzd6Q05O5TwEJ",
      "type": "text",
      "x": 653.3211146763392,
      "y": 1666.2402392796096,
      "width": 240,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1783442134,
      "version": 126,
      "versionNonce": 143267926,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "取走最后一个，并设定取走后的栈",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "取走最后一个，并设定取走后的栈",
      "lineHeight": 1.2
    },
    {
      "id": "5mKSgQNwuzIkSqpXXXnMj",
      "type": "text",
      "x": 497.5334033498171,
      "y": 1418.0106769633314,
      "width": 160,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1973119062,
      "version": 92,
      "versionNonce": 763506378,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "入栈：将数据放入栈顶",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "入栈：将数据放入栈顶",
      "lineHeight": 1.2
    },
    {
      "id": "qp4b1pO5J-kG2W_vj1k9s",
      "type": "text",
      "x": 497.9465836143767,
      "y": 1534.7599861563347,
      "width": 144,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1597602186,
      "version": 114,
      "versionNonce": 102005462,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "出栈，返回栈顶元素",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "出栈，返回栈顶元素",
      "lineHeight": 1.2
    },
    {
      "id": "KmqXJIKNycv0ulwt9_vhK",
      "type": "text",
      "x": 551.913452621834,
      "y": 1742.418316900299,
      "width": 224,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1129748822,
      "version": 177,
      "versionNonce": 1873134986,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "返回栈顶元素，不进行出栈操作",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "返回栈顶元素，不进行出栈操作",
      "lineHeight": 1.2
    },
    {
      "id": "DX3bIPA7FuwnRreZuFBzP",
      "type": "text",
      "x": 707.1752656988937,
      "y": 1375.99973502441,
      "width": 480,
      "height": 76.8,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 446235670,
      "version": 128,
      "versionNonce": 447393814,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "          释放本地线程存储区中的所有值。当线程结束时，会\n自动调用该方法来释放本地存储区，以避免内存泄漏。在该方法中，\n将 _storage 属性设置为空列表，表示将所有值从本地存储区中\n            移除。",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "          释放本地线程存储区中的所有值。当线程结束时，会\n自动调用该方法来释放本地存储区，以避免内存泄漏。在该方法中，\n将 _storage 属性设置为空列表，表示将所有值从本地存储区中\n            移除。",
      "lineHeight": 1.2
    },
    {
      "id": "e2CaX3piYZuTZ1gMNRbzm",
      "type": "text",
      "x": 1717.863991950669,
      "y": 468.2861327849748,
      "width": 297.875,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1963155926,
      "version": 90,
      "versionNonce": 1095253334,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "项目启动==>实例化Flask,执行init方法\n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "项目启动==>实例化Flask,执行init方法\n",
      "lineHeight": 1.2
    },
    {
      "id": "EOobXqR3LO5bzzDWzSPrR",
      "type": "text",
      "x": 1538.5802949957683,
      "y": 491.1236017125316,
      "width": 787.5,
      "height": 1152,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2049155222,
      "version": 113,
      "versionNonce": 73755402,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "    def __init__(\n        self,\n        import_name: str,\n        static_url_path: t.Optional[str] = None,\n        static_folder: t.Optional[t.Union[str, os.PathLike]] = \"static\",\n        static_host: t.Optional[str] = None,\n        host_matching: bool = False,\n        subdomain_matching: bool = False,\n        template_folder: t.Optional[t.Union[str, os.PathLike]] = \"templates\",\n        instance_path: t.Optional[str] = None,\n        instance_relative_config: bool = False,\n        root_path: t.Optional[str] = None,\n    ):\n        super().__init__(\n            import_name=import_name,\n            static_folder=static_folder,\n            static_url_path=static_url_path,\n            template_folder=template_folder,\n            root_path=root_path,\n        )\n\n        if instance_path is None:\n            instance_path = self.auto_find_instance_path()\n        elif not os.path.isabs(instance_path):\n            raise ValueError(。。。。。。)\n\n        self.instance_path = instance_path\n        self.config = self.make_config(instance_relative_config)\n        self.aborter = self.make_aborter()\n\n        self.json: JSONProvider = self.json_provider_class(self)\n \n        self.url_build_error_handlers: t.List[\n            t.Callable[[Exception, str, t.Dict[str, t.Any]], str]\n        ] = []\n\n        self.before_first_request_funcs: t.List[ft.BeforeFirstRequestCallable] = []\n        self.teardown_appcontext_funcs: t.List[ft.TeardownCallable] = []\n        self.shell_context_processors: t.List[ft.ShellContextProcessorCallable] = []\n        self.blueprints: t.Dict[str, \"Blueprint\"] = {}\n        self.extensions: dict = {}\n        self.url_map = self.url_map_class()\n\n        self.url_map.host_matching = host_matching\n        self.subdomain_matching = subdomain_matching\n        self._got_first_request = False\n        self._before_request_lock = Lock()\n        if self.has_static_folder:\n            assert (\n                bool(static_host) == host_matching\n            ), \"Invalid static_host/host_matching combination\"\n            self_ref = weakref.ref(self)\n            self.add_url_rule(\n                f\"{self.static_url_path}/<path:filename>\",\n                endpoint=\"static\",\n                host=static_host,\n                view_func=lambda **kw: self_ref().send_static_file(**kw), \n            )\n\n        self.cli.name = self.name",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def __init__(\n        self,\n        import_name: str,\n        static_url_path: t.Optional[str] = None,\n        static_folder: t.Optional[t.Union[str, os.PathLike]] = \"static\",\n        static_host: t.Optional[str] = None,\n        host_matching: bool = False,\n        subdomain_matching: bool = False,\n        template_folder: t.Optional[t.Union[str, os.PathLike]] = \"templates\",\n        instance_path: t.Optional[str] = None,\n        instance_relative_config: bool = False,\n        root_path: t.Optional[str] = None,\n    ):\n        super().__init__(\n            import_name=import_name,\n            static_folder=static_folder,\n            static_url_path=static_url_path,\n            template_folder=template_folder,\n            root_path=root_path,\n        )\n\n        if instance_path is None:\n            instance_path = self.auto_find_instance_path()\n        elif not os.path.isabs(instance_path):\n            raise ValueError(。。。。。。)\n\n        self.instance_path = instance_path\n        self.config = self.make_config(instance_relative_config)\n        self.aborter = self.make_aborter()\n\n        self.json: JSONProvider = self.json_provider_class(self)\n \n        self.url_build_error_handlers: t.List[\n            t.Callable[[Exception, str, t.Dict[str, t.Any]], str]\n        ] = []\n\n        self.before_first_request_funcs: t.List[ft.BeforeFirstRequestCallable] = []\n        self.teardown_appcontext_funcs: t.List[ft.TeardownCallable] = []\n        self.shell_context_processors: t.List[ft.ShellContextProcessorCallable] = []\n        self.blueprints: t.Dict[str, \"Blueprint\"] = {}\n        self.extensions: dict = {}\n        self.url_map = self.url_map_class()\n\n        self.url_map.host_matching = host_matching\n        self.subdomain_matching = subdomain_matching\n        self._got_first_request = False\n        self._before_request_lock = Lock()\n        if self.has_static_folder:\n            assert (\n                bool(static_host) == host_matching\n            ), \"Invalid static_host/host_matching combination\"\n            self_ref = weakref.ref(self)\n            self.add_url_rule(\n                f\"{self.static_url_path}/<path:filename>\",\n                endpoint=\"static\",\n                host=static_host,\n                view_func=lambda **kw: self_ref().send_static_file(**kw), \n            )\n\n        self.cli.name = self.name",
      "lineHeight": 1.2
    },
    {
      "id": "p8MLQ-2MdHbrWDOoM-rAl",
      "type": "rectangle",
      "x": 1560.91963056962,
      "y": 437.2058908507114,
      "width": 779.8198269080435,
      "height": 1225.278724342008,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 648036938,
      "version": 97,
      "versionNonce": 1866605206,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false
    },
    {
      "id": "NHOposUJCzpzwPeAOJw7u",
      "type": "text",
      "x": 1834.6005204765286,
      "y": 1490.26545510419,
      "width": 176,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1332816982,
      "version": 73,
      "versionNonce": 928479690,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "自己添加静态文件夹路由",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "自己添加静态文件夹路由",
      "lineHeight": 1.2
    },
    {
      "id": "j7n8jCEK05Y7fe5qykNZC",
      "type": "text",
      "x": 2096.8292312804933,
      "y": 1478.3010740646248,
      "width": 232.25,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1394864138,
      "version": 85,
      "versionNonce": 659382230,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "默认添加了一个static静态路由",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "默认添加了一个static静态路由",
      "lineHeight": 1.2
    },
    {
      "id": "JWiVJ-FSwDJ5y9c3fG_nW",
      "type": "text",
      "x": 1748.6261337823144,
      "y": 495.8079948106224,
      "width": 476.125,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1733478666,
      "version": 149,
      "versionNonce": 1184477322,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "将一些初始化的值封装到APP中，并处理了一个添加静态文件的路由",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "将一些初始化的值封装到APP中，并处理了一个添加静态文件的路由",
      "lineHeight": 1.2
    },
    {
      "id": "8bUMHDsvKcv-sz5KOAIIK",
      "type": "text",
      "x": 1869.752411941769,
      "y": 1531.452851761002,
      "width": 120.25,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1987804746,
      "version": 73,
      "versionNonce": 1300165910,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "端点写死static",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "端点写死static",
      "lineHeight": 1.2
    },
    {
      "id": "rGLNuIyQaffnOSht5-p9X",
      "type": "text",
      "x": 1602.9611218636583,
      "y": 444.9160053535621,
      "width": 252.125,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1655546134,
      "version": 102,
      "versionNonce": 2068570710,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "第一步，项目启动，初始化app对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "第一步，项目启动，初始化app对象",
      "lineHeight": 1.2
    },
    {
      "id": "np3InqQqx9HkBhz_Renu-",
      "type": "text",
      "x": 1576.249435368096,
      "y": 1706.025711315044,
      "width": 160,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 988475222,
      "version": 49,
      "versionNonce": 429561354,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "第二部，加载配置对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "第二部，加载配置对象",
      "lineHeight": 1.2
    },
    {
      "id": "pr1yaFKeNng1mbElhImUm",
      "type": "text",
      "x": 1536.9878806193396,
      "y": 1749.6812416810883,
      "width": 571.875,
      "height": 115.19999999999999,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 57541910,
      "version": 40,
      "versionNonce": 1401497494,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "    def from_object(self, obj: t.Union[object, str]) -> None:\n        if isinstance(obj, str):\n            obj = import_string(obj)\n        for key in dir(obj):\n            if key.isupper():\n                self[key] = getattr(obj, key)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_object(self, obj: t.Union[object, str]) -> None:\n        if isinstance(obj, str):\n            obj = import_string(obj)\n        for key in dir(obj):\n            if key.isupper():\n                self[key] = getattr(obj, key)",
      "lineHeight": 1.2
    },
    {
      "id": "M24zjdJ6TlK66nLPxL6_g",
      "type": "text",
      "x": 1538.1575742343455,
      "y": 1876.443404703814,
      "width": 759.375,
      "height": 268.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1717534666,
      "version": 44,
      "versionNonce": 778453962,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "ldzkwnGvsB92DRlbqDQIf",
          "type": "arrow"
        }
      ],
      "updated": 1681022944975,
      "link": null,
      "locked": false,
      "text": "    def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n        filename = os.path.join(self.root_path, filename)\n        d = types.ModuleType(\"config\")\n        d.__file__ = filename\n        try:\n            with open(filename, mode=\"rb\") as config_file:\n                exec(compile(config_file.read(), filename, \"exec\"), d.__dict__)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR, errno.ENOTDIR):\n                return False\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n        self.from_object(d)\n        return True",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n        filename = os.path.join(self.root_path, filename)\n        d = types.ModuleType(\"config\")\n        d.__file__ = filename\n        try:\n            with open(filename, mode=\"rb\") as config_file:\n                exec(compile(config_file.read(), filename, \"exec\"), d.__dict__)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR, errno.ENOTDIR):\n                return False\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n        self.from_object(d)\n        return True",
      "lineHeight": 1.2
    },
    {
      "id": "60RcI42WnQUGlZRilwaY_",
      "type": "text",
      "x": 1539.2640110529608,
      "y": 2155.826007611778,
      "width": 712.5,
      "height": 364.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2009314314,
      "version": 45,
      "versionNonce": 1449903318,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "    def from_file(\n        self,\n        filename: str,\n        load: t.Callable[[t.IO[t.Any]], t.Mapping],\n        silent: bool = False,\n    ) -> bool:\n        filename = os.path.join(self.root_path, filename)\n\n        try:\n            with open(filename) as f:\n                obj = load(f)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                return False\n\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n\n        return self.from_mapping(obj)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_file(\n        self,\n        filename: str,\n        load: t.Callable[[t.IO[t.Any]], t.Mapping],\n        silent: bool = False,\n    ) -> bool:\n        filename = os.path.join(self.root_path, filename)\n\n        try:\n            with open(filename) as f:\n                obj = load(f)\n        except OSError as e:\n            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                return False\n\n            e.strerror = f\"Unable to load configuration file ({e.strerror})\"\n            raise\n\n        return self.from_mapping(obj)",
      "lineHeight": 1.2
    },
    {
      "id": "9FHhPpelSFm8m7N_-MKUh",
      "type": "text",
      "x": 1538.663246581544,
      "y": 2533.014600929143,
      "width": 712.5,
      "height": 230.39999999999998,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 335026710,
      "version": 29,
      "versionNonce": 1790974858,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false,
      "text": "    def from_envvar(self, variable_name: str, silent: bool = False) -> bool:\n        rv = os.environ.get(variable_name)\n        if not rv:\n            if silent:\n                return False\n            raise RuntimeError(\n                f\"The environment variable {variable_name!r} is not set\"\n                \" and as such configuration could not be loaded. Set\"\n                \" this variable and make it point to a configuration\"\n                \" file\"\n            )\n        return self.from_pyfile(rv, silent=silent)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def from_envvar(self, variable_name: str, silent: bool = False) -> bool:\n        rv = os.environ.get(variable_name)\n        if not rv:\n            if silent:\n                return False\n            raise RuntimeError(\n                f\"The environment variable {variable_name!r} is not set\"\n                \" and as such configuration could not be loaded. Set\"\n                \" this variable and make it point to a configuration\"\n                \" file\"\n            )\n        return self.from_pyfile(rv, silent=silent)",
      "lineHeight": 1.2
    },
    {
      "id": "WO-3MSa26bP-XEhESlBrp",
      "type": "rectangle",
      "x": 1557.7497106916512,
      "y": 1674.2319767771023,
      "width": 787.4346194099508,
      "height": 1099.127430589354,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 301317514,
      "version": 112,
      "versionNonce": 898152982,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022283357,
      "link": null,
      "locked": false
    },
    {
      "id": "ece2AFUVQQyzJqoC6_LPd",
      "type": "text",
      "x": 1841.8424488192954,
      "y": 1769.4617652888678,
      "width": 240,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2044804118,
      "version": 109,
      "versionNonce": 267941014,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022511495,
      "link": null,
      "locked": false,
      "text": "字符串对象则依据字符串路径导入",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "字符串对象则依据字符串路径导入",
      "lineHeight": 1.2
    },
    {
      "id": "S6yrko0wCftOY6AZlq185",
      "type": "text",
      "x": 1799.9477674654615,
      "y": 1805.978782502798,
      "width": 224,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1289444682,
      "version": 126,
      "versionNonce": 107550486,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022561105,
      "link": null,
      "locked": false,
      "text": "返回导入对象的全部方法和属性",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "返回导入对象的全部方法和属性",
      "lineHeight": 1.2
    },
    {
      "id": "vAhBXr8rALLAGx7CNC-fV",
      "type": "text",
      "x": 2007.5007475294615,
      "y": 1675.8389260564147,
      "width": 308.875,
      "height": 76.8,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2084081558,
      "version": 606,
      "versionNonce": 1161771658,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "ldzkwnGvsB92DRlbqDQIf",
          "type": "arrow"
        }
      ],
      "updated": 1681022944975,
      "link": null,
      "locked": false,
      "text": "类对象+[]=xxx   执行__setitem__方法\n类对象+[]       执行__getitem__方法\n类对象.xxx      执行__getattr__方法\n类对象.xxx=xxx  执行__setattr__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "类对象+[]=xxx   执行__setitem__方法\n类对象+[]       执行__getitem__方法\n类对象.xxx      执行__getattr__方法\n类对象.xxx=xxx  执行__setattr__方法",
      "lineHeight": 1.2
    },
    {
      "id": "ldzkwnGvsB92DRlbqDQIf",
      "type": "arrow",
      "x": 1964.6328034325452,
      "y": 1853.3791590224764,
      "width": 162.86691545184567,
      "height": 93.21311158119624,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 272152266,
      "version": 83,
      "versionNonce": 758172822,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681022950407,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          113.18737004019567,
          -38.41201566014547
        ],
        [
          162.86691545184567,
          -93.21311158119624
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "M24zjdJ6TlK66nLPxL6_g",
        "focus": -0.5378320832194979,
        "gap": 23.064245681337525
      },
      "endBinding": {
        "elementId": "vAhBXr8rALLAGx7CNC-fV",
        "focus": -0.038026026958185966,
        "gap": 7.527121384865609
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "kabH_yxltr1Pwou2GBwZc",
      "type": "text",
      "x": 1807.8606496545651,
      "y": 1827.0029366374165,
      "width": 157.75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1060365962,
      "version": 103,
      "versionNonce": 1585470346,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681023031551,
      "link": null,
      "locked": false,
      "text": "执行_setitem__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "执行_setitem__方法",
      "lineHeight": 1.2
    },
    {
      "id": "qz7rUa5a_-7_Jkk5O1wIB",
      "type": "text",
      "x": 2004.0178239426805,
      "y": 1786.619070389389,
      "width": 345.25,
      "height": 76.8,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1985877526,
      "version": 368,
      "versionNonce": 414756682,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681023113042,
      "link": null,
      "locked": false,
      "text": "app.config对(Config)象执行from_object,\n    Config继承自字典，是一个字典对象。\n所以后续app.config可以拿到所有配置项\n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "app.config对(Config)象执行from_object,\n    Config继承自字典，是一个字典对象。\n所以后续app.config可以拿到所有配置项\n",
      "lineHeight": 1.2
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}