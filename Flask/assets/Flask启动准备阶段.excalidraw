{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "UR2SOs28R36mqGxIKaQzQ",
      "type": "text",
      "x": 1698.8553502374746,
      "y": 3013.507692184192,
      "width": 721.875,
      "height": 537.6,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 985805409,
      "version": 14,
      "versionNonce": 610153505,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681105595712,
      "link": null,
      "locked": false,
      "text": "    def __call__(self, environ: dict, start_response: t.Callable) -> t.Any:\n        return self.wsgi_app(environ, start_response)\n\n    def wsgi_app(self, environ: dict, start_response: t.Callable) -> t.Any:\n        ctx = self.request_context(environ)\n\n\n        error: t.Optional[BaseException] = None\n        try:\n            try:\n                ctx.push()\n                response = self.full_dispatch_request()\n            except Exception as e:\n                error = e\n                response = self.handle_exception(e)\n            except:  # noqa: B001\n                error = sys.exc_info()[1]\n                raise\n            return response(environ, start_response)\n        finally:\n            if \"werkzeug.debug.preserve_context\" in environ:\n                environ[\"werkzeug.debug.preserve_context\"](_cv_app.get())\n                environ[\"werkzeug.debug.preserve_context\"](_cv_request.get())\n\n            if error is not None and self.should_ignore_error(error):\n                error = None\n\n            ctx.pop(error)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def __call__(self, environ: dict, start_response: t.Callable) -> t.Any:\n        return self.wsgi_app(environ, start_response)\n\n    def wsgi_app(self, environ: dict, start_response: t.Callable) -> t.Any:\n        ctx = self.request_context(environ)\n\n\n        error: t.Optional[BaseException] = None\n        try:\n            try:\n                ctx.push()\n                response = self.full_dispatch_request()\n            except Exception as e:\n                error = e\n                response = self.handle_exception(e)\n            except:  # noqa: B001\n                error = sys.exc_info()[1]\n                raise\n            return response(environ, start_response)\n        finally:\n            if \"werkzeug.debug.preserve_context\" in environ:\n                environ[\"werkzeug.debug.preserve_context\"](_cv_app.get())\n                environ[\"werkzeug.debug.preserve_context\"](_cv_request.get())\n\n            if error is not None and self.should_ignore_error(error):\n                error = None\n\n            ctx.pop(error)",
      "lineHeight": 1.2
    },
    {
      "id": "s8udC4zSy_i6xEfliMca8",
      "type": "rectangle",
      "x": 1707.3023106866933,
      "y": 2980.3637140652954,
      "width": 744.6968841552732,
      "height": 678.7878608703613,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1528104783,
      "version": 144,
      "versionNonce": 1571848303,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1681105510187,
      "link": null,
      "locked": false
    },
    {
      "id": "xmaURV-pd4cPoEcXzzFMU",
      "type": "text",
      "x": 1734.764507036791,
      "y": 2992.598630752307,
      "width": 203,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 667461569,
      "version": 109,
      "versionNonce": 1153740271,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681105481092,
      "link": null,
      "locked": false,
      "text": "请求进入执行__call__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "请求进入执行__call__方法",
      "lineHeight": 1.2
    },
    {
      "id": "BqWMoqgc9Ug2Bau2uF1WE",
      "type": "text",
      "x": 1969.1584279352285,
      "y": 2992.2576731107056,
      "width": 420.375,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 458623265,
      "version": 190,
      "versionNonce": 1392418319,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681105522419,
      "link": null,
      "locked": false,
      "text": "environ:浏览器发送的数据,用户请求的所有数据，原始值",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "environ:浏览器发送的数据,用户请求的所有数据，原始值",
      "lineHeight": 1.2
    },
    {
      "id": "aedFLhWXFO4vDUT_026LB",
      "type": "text",
      "x": 2107.5674702936267,
      "y": 3092.257692184192,
      "width": 204.625,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1508615759,
      "version": 116,
      "versionNonce": 322092769,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681105555904,
      "link": null,
      "locked": false,
      "text": "封装到request_context中",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "封装到request_context中",
      "lineHeight": 1.2
    },
    {
      "id": "uzcLIUy8Vkt8y_9m-Y-Yx",
      "type": "text",
      "x": 1734.8401906305407,
      "y": 3106.6516130826294,
      "width": 590.625,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 382504399,
      "version": 289,
      "versionNonce": 1947160239,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681105600107,
      "link": null,
      "locked": false,
      "text": "    def request_context(self, environ: dict) -> RequestContext:\n        return RequestContext(self, environ)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def request_context(self, environ: dict) -> RequestContext:\n        return RequestContext(self, environ)",
      "lineHeight": 1.2
    },
    {
      "id": "5UF0BsjnD49fl0tN3JJYJ",
      "type": "text",
      "x": 1715.143211107836,
      "y": 2493.697130050403,
      "width": 825,
      "height": 441.59999999999997,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 622410625,
      "version": 66,
      "versionNonce": 811860879,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681105802424,
      "link": null,
      "locked": false,
      "text": "class RequestContext:\n    def __init__(\n        self,\n        app: \"Flask\",\n        environ: dict,\n        request: t.Optional[\"Request\"] = None,\n        session: t.Optional[\"SessionMixin\"] = None,\n    ) -> None:\n        self.app = app\n        if request is None:\n            request = app.request_class(environ)\n            request.json_module = app.json\n        self.request: Request = request\n        self.url_adapter = None\n        try:\n            self.url_adapter = app.create_url_adapter(self.request)\n        except HTTPException as e:\n            self.request.routing_exception = e\n        self.flashes: t.Optional[t.List[t.Tuple[str, str]]] = None\n        self.session: t.Optional[\"SessionMixin\"] = session\n        self._after_request_functions: t.List[ft.AfterRequestCallable] = []\n\n        self._cv_tokens: t.List[t.Tuple[contextvars.Token, t.Optional[AppContext]]] = []",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class RequestContext:\n    def __init__(\n        self,\n        app: \"Flask\",\n        environ: dict,\n        request: t.Optional[\"Request\"] = None,\n        session: t.Optional[\"SessionMixin\"] = None,\n    ) -> None:\n        self.app = app\n        if request is None:\n            request = app.request_class(environ)\n            request.json_module = app.json\n        self.request: Request = request\n        self.url_adapter = None\n        try:\n            self.url_adapter = app.create_url_adapter(self.request)\n        except HTTPException as e:\n            self.request.routing_exception = e\n        self.flashes: t.Optional[t.List[t.Tuple[str, str]]] = None\n        self.session: t.Optional[\"SessionMixin\"] = session\n        self._after_request_functions: t.List[ft.AfterRequestCallable] = []\n\n        self._cv_tokens: t.List[t.Tuple[contextvars.Token, t.Optional[AppContext]]] = []",
      "lineHeight": 1.2
    },
    {
      "id": "tasbI7drfhDBkDJ8aI5aK",
      "type": "rectangle",
      "x": 1707.302291613207,
      "y": 2481.121332015735,
      "width": 840.9091567993162,
      "height": 478.03028106689453,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 625554369,
      "version": 94,
      "versionNonce": 2054881505,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681105802424,
      "link": null,
      "locked": false
    },
    {
      "id": "hzF-qPtNECBmyQj6OU3Ow",
      "type": "text",
      "x": 2582.1128918939685,
      "y": 2819.0380209348023,
      "width": 541.625,
      "height": 115.19999999999999,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1835051969,
      "version": 464,
      "versionNonce": 1231217295,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1681106163832,
      "link": null,
      "locked": false,
      "text": "1. 封装request对象\n2. 找路由，做路由匹配（request.path）==>Map 得到endpoint\n3. 创建一个空session\n4. 打包，放在一起，request_context对象\n5. 创建app对象\n6. 先执行完before_first_request,before_request,再执行视图函数",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. 封装request对象\n2. 找路由，做路由匹配（request.path）==>Map 得到endpoint\n3. 创建一个空session\n4. 打包，放在一起，request_context对象\n5. 创建app对象\n6. 先执行完before_first_request,before_request,再执行视图函数",
      "lineHeight": 1.2
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}