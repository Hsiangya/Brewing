{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 135,
      "versionNonce": 1456414546,
      "isDeleted": false,
      "id": "6ccNGjqeIMFTba_18kJyE",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 523.606192154442,
      "y": 207.66665649414062,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 759.375,
      "height": 76.8,
      "seed": 1156937170,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if self.root_path:\n            scope[\"root_path\"] = self.root_path\n        await super().__call__(scope, receive, send)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if self.root_path:\n            scope[\"root_path\"] = self.root_path\n        await super().__call__(scope, receive, send)",
      "lineHeight": 1.2,
      "baseline": 72
    },
    {
      "type": "text",
      "version": 51,
      "versionNonce": 169043218,
      "isDeleted": false,
      "id": "QiFA1V-UEs9UkoYnPm1q7",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 530.9493834804186,
      "y": 322.6888548890861,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 759.375,
      "height": 96,
      "seed": 1340520978,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "gUcrt9Hv06H0uRIyqzl_f",
          "type": "arrow"
        }
      ],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        scope[\"app\"] = self\n        if self.middleware_stack is None:\n            self.middleware_stack = self.build_middleware_stack()\n        await self.middleware_stack(scope, receive, send)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        scope[\"app\"] = self\n        if self.middleware_stack is None:\n            self.middleware_stack = self.build_middleware_stack()\n        await self.middleware_stack(scope, receive, send)",
      "lineHeight": 1.2,
      "baseline": 91
    },
    {
      "type": "rectangle",
      "version": 308,
      "versionNonce": 1594797326,
      "isDeleted": false,
      "id": "J4nv1KDPW4mb8yqLa_Ht8",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 546.9251572791007,
      "y": 193.3614673607011,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 739.1501065636544,
      "height": 95.09369597915736,
      "seed": 926265170,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 149,
      "versionNonce": 1615393490,
      "isDeleted": false,
      "id": "qB-kR3LTZmMCdZq4jURQz",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 546.9251572791007,
      "y": 304.07372652321646,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 748.831660925404,
      "height": 125.5236633697749,
      "seed": 790905358,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "id": "gUcrt9Hv06H0uRIyqzl_f",
          "type": "arrow"
        }
      ],
      "updated": 1700993312273,
      "link": null,
      "locked": false
    },
    {
      "type": "arrow",
      "version": 229,
      "versionNonce": 1527896910,
      "isDeleted": false,
      "id": "gUcrt9Hv06H0uRIyqzl_f",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1014.8853466816239,
      "y": 283.42557851622604,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 261.5013518700482,
      "height": 37.16336530495863,
      "seed": 295842642,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "qB-kR3LTZmMCdZq4jURQz",
        "focus": 0.6045928135749695,
        "gap": 20.648148006990425
      },
      "endBinding": {
        "elementId": "QiFA1V-UEs9UkoYnPm1q7",
        "focus": -0.7105567592523229,
        "gap": 2.0999110679014166
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -261.5013518700482,
          37.16336530495863
        ]
      ]
    },
    {
      "type": "text",
      "version": 63,
      "versionNonce": 2080819346,
      "isDeleted": false,
      "id": "ZU7QsyUCvysxunfxdSWlq",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 982.8676905095037,
      "y": 241.30710256283888,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 65.625,
      "height": 19.2,
      "seed": 787805074,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "fastapi",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "fastapi",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 87,
      "versionNonce": 1125466510,
      "isDeleted": false,
      "id": "UqbL3kocNXxyuZp64iCI0",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 802.3156929718439,
      "y": 341.33852725431694,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 187.5,
      "height": 19.2,
      "seed": 945774478,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "scope.app -->fastapi",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "scope.app -->fastapi",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 175,
      "versionNonce": 352577106,
      "isDeleted": false,
      "id": "6mzvikgR2wKbyBD6FAqOp",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 919.6900261978691,
      "y": 361.1589414946323,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 349.75,
      "height": 19.2,
      "seed": 1887146318,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "如果中间件stack是空的，够在一个中间件stack",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "如果中间件stack是空的，够在一个中间件stack",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 48,
      "versionNonce": 1410812946,
      "isDeleted": false,
      "id": "yvoTtpUWopJs0-Es6KQFX",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 511.51241616733637,
      "y": 468.6230534238009,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 984.375,
      "height": 460.79999999999995,
      "seed": 515140562,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    def build_middleware_stack(self) -> ASGIApp:\n        debug = self.debug\n        error_handler = None\n        exception_handlers: typing.Dict[typing.Any, typing.Callable[[Request, Exception], Response]] = {}\n        for key, value in self.exception_handlers.items():\n            if key in (500, Exception):\n                error_handler = value\n            else:\n                exception_handlers[key] = value\n\n        middleware = (\n            [Middleware(ServerErrorMiddleware, handler=error_handler, debug=debug)]\n            + self.user_middleware\n            + [\n                Middleware(\n                    ExceptionMiddleware, handlers=exception_handlers, debug=debug\n                )\n            ]\n        )\n\n        app = self.router\n        for cls, options in reversed(middleware):\n            app = cls(app=app, **options)\n        return app",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def build_middleware_stack(self) -> ASGIApp:\n        debug = self.debug\n        error_handler = None\n        exception_handlers: typing.Dict[typing.Any, typing.Callable[[Request, Exception], Response]] = {}\n        for key, value in self.exception_handlers.items():\n            if key in (500, Exception):\n                error_handler = value\n            else:\n                exception_handlers[key] = value\n\n        middleware = (\n            [Middleware(ServerErrorMiddleware, handler=error_handler, debug=debug)]\n            + self.user_middleware\n            + [\n                Middleware(\n                    ExceptionMiddleware, handlers=exception_handlers, debug=debug\n                )\n            ]\n        )\n\n        app = self.router\n        for cls, options in reversed(middleware):\n            app = cls(app=app, **options)\n        return app",
      "lineHeight": 1.2,
      "baseline": 456
    },
    {
      "type": "text",
      "version": 100,
      "versionNonce": 792197586,
      "isDeleted": false,
      "id": "vK1hpvbKts_DwNMD5uRa3",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1028.3928980682713,
      "y": 303.246091993433,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 84.375,
      "height": 19.2,
      "seed": 1535496526,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "Starlette",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Starlette",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "rectangle",
      "version": 114,
      "versionNonce": 2075837518,
      "isDeleted": false,
      "id": "Z9GHQb3eSFDB8xUsrTlzA",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 540.933404249296,
      "y": 458.71283212694425,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 956.9566849560877,
      "height": 473.8329218149238,
      "seed": 765506066,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 71,
      "versionNonce": 1165815698,
      "isDeleted": false,
      "id": "Idv-7WvxKG4UhE7KjeB_f",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1066.7949949610663,
      "y": 505.16702458144385,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 80,
      "height": 19.2,
      "seed": 191756878,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "可调用对象",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "可调用对象",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 98,
      "versionNonce": 280562318,
      "isDeleted": false,
      "id": "sma1yZYW3wcIP0vX81Qvr",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1193.1504937047214,
      "y": 505.7864329054583,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 96,
      "height": 19.2,
      "seed": 1786714898,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "接受两个入参",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "接受两个入参",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 62,
      "versionNonce": 991767890,
      "isDeleted": false,
      "id": "lyUXI-KMYGUGIKumPfVim",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1365.9600856659847,
      "y": 508.26398114132303,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 48,
      "height": 19.2,
      "seed": 929326930,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "返回值",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "返回值",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 94,
      "versionNonce": 1922336974,
      "isDeleted": false,
      "id": "93PRlGXIFrWqUH7XaE8_8",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 899.5598510887513,
      "y": 509.19309362734447,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 48,
      "height": 19.2,
      "seed": 1351492302,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "字典键",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "字典键",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "rectangle",
      "version": 77,
      "versionNonce": 359641874,
      "isDeleted": false,
      "id": "IlzfDf55F2l00JeovZik9",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 986.8938729689951,
      "y": 500.21192810971434,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 453.3930567204977,
      "height": 48.3123748964465,
      "seed": 1069132114,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 54,
      "versionNonce": 15089422,
      "isDeleted": false,
      "id": "mu5b2a2yD4PomrXu9HUeW",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1130.5921243035107,
      "y": 470.48123586574735,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 64,
      "height": 19.2,
      "seed": 1232531026,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "字典的值",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "字典的值",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 121,
      "versionNonce": 384532690,
      "isDeleted": false,
      "id": "RZWJepcCymjCkb16mEOjn",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 882.2170984978911,
      "y": 563.6993816435493,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 256.5,
      "height": 19.2,
      "seed": 1403406734,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "500，或者是捕获的Exception异常",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "500，或者是捕获的Exception异常",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 173,
      "versionNonce": 455579282,
      "isDeleted": false,
      "id": "v9QGXHqm-XpkDBYwr8k8M",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1053.4781980025164,
      "y": 550.0727954627991,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 267,
      "height": 19.2,
      "seed": 238278994,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "遍历fastapid中所有的异常处理信息",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "遍历fastapid中所有的异常处理信息",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 101,
      "versionNonce": 1034965902,
      "isDeleted": false,
      "id": "Naj8-JVq1TgdFMCmIqKp3",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 962.7376855207717,
      "y": 622.2316819988594,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 240,
      "height": 19.2,
      "seed": 16547406,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "将异常处理信息添加到新得字典中",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "将异常处理信息添加到新得字典中",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 206,
      "versionNonce": 1926952018,
      "isDeleted": false,
      "id": "zT2CZKTmXdaP9MAQi3eCr",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1298.7564090152448,
      "y": 677.357349985681,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 144,
      "height": 19.2,
      "seed": 1019403726,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "处理未被捕获的异常",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "处理未被捕获的异常",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 194,
      "versionNonce": 1788286542,
      "isDeleted": false,
      "id": "Em_hYgkJs1m8llm75j6N2",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 744.4640920422341,
      "y": 787.9202929622874,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 740.625,
      "height": 76.8,
      "seed": 1070747406,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    def add_middleware(self, middleware_class)\n        if self.middleware_stack is not None:  \n            raise RuntimeError(\"\")\n        self.user_middleware.insert(0, Middleware(middleware_class, **options))",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def add_middleware(self, middleware_class)\n        if self.middleware_stack is not None:  \n            raise RuntimeError(\"\")\n        self.user_middleware.insert(0, Middleware(middleware_class, **options))",
      "lineHeight": 1.2,
      "baseline": 72
    },
    {
      "type": "arrow",
      "version": 112,
      "versionNonce": 2126953874,
      "isDeleted": false,
      "id": "KBVeAv5OPAevexGk8Bc-e",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 846.175802489314,
      "y": 700.0897102068262,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 477.6658402848261,
      "height": 147.6421642154404,
      "seed": 25784978,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          391.6070798502117,
          41.05556637871916
        ],
        [
          477.6658402848261,
          147.6421642154404
        ]
      ]
    },
    {
      "type": "text",
      "version": 154,
      "versionNonce": 1144724622,
      "isDeleted": false,
      "id": "I7l0jj8meZiU5IrI_Kt7l",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 807.4887910318018,
      "y": 733.2499850893619,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 380.625,
      "height": 19.2,
      "seed": 1341044370,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "执行add_middleware的时候，会将中间件放入0位置",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "执行add_middleware的时候，会将中间件放入0位置",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 122,
      "versionNonce": 100481874,
      "isDeleted": false,
      "id": "w9AAOmoT-3nCzXpN2UMm6",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 981.1854207988317,
      "y": 869.4439350722298,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 272,
      "height": 19.2,
      "seed": 1802435598,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "将中间件倒置，也就是先注册的先执行",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "将中间件倒置，也就是先注册的先执行",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 76,
      "versionNonce": 1696465170,
      "isDeleted": false,
      "id": "U1bbk7BkittgFBEim1hgO",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 670.1105455174146,
      "y": 831.9412552880679,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 116.375,
      "height": 19.2,
      "seed": 352999954,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "APIRouter对象",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "APIRouter对象",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 155,
      "versionNonce": 933236434,
      "isDeleted": false,
      "id": "741ZNwVj__Kw3rIXD7CdC",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 896.3109920375675,
      "y": 890.3665496987867,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 240,
      "height": 19.2,
      "seed": 1404713682,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "会对所有的中间件对象进行实例化",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "会对所有的中间件对象进行实例化",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "arrow",
      "version": 152,
      "versionNonce": 2123982222,
      "isDeleted": false,
      "id": "-9H4cXmQPq0Pe_lWeN_N8",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 583.2620860665742,
      "y": 913.2629058802686,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 37.10793870154305,
      "height": 500.5622326081396,
      "seed": 259131346,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -15.001064685298388,
          -347.39333181772236
        ],
        [
          22.10687401624466,
          -500.5622326081396
        ]
      ]
    },
    {
      "type": "text",
      "version": 109,
      "versionNonce": 1581515346,
      "isDeleted": false,
      "id": "1syWtl-taaMTka2ZlyM1L",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 683.9271339620367,
      "y": 909.3151697775984,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 164.375,
      "height": 19.2,
      "seed": 740001682,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "请求到达APIRouter层",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "请求到达APIRouter层",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 41,
      "versionNonce": 316578510,
      "isDeleted": false,
      "id": "LwQtBSpqiaLPCXqalMNi1",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1814.3367946896085,
      "y": 181.59878616525322,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 806.25,
      "height": 806.4,
      "seed": 549855374,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993345977,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": " async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if \"router\" not in scope:\n            scope[\"router\"] = self\n\n        if scope[\"type\"] == \"lifespan\":\n            await self.lifespan(scope, receive, send)\n            return\n\n        partial = None\n\n        for route in self.routes:\n            match, child_scope = route.matches(scope)\n            if match == Match.FULL:\n                scope.update(child_scope)\n                await route.handle(scope, receive, send)\n                return\n            elif match == Match.PARTIAL and partial is None:\n                partial = route\n                partial_scope = child_scope\n\n        if partial is not None:\n            scope.update(partial_scope)\n            await partial.handle(scope, receive, send)\n            return\n\n        if scope[\"type\"] == \"http\" and self.redirect_slashes and scope[\"path\"] != \"/\":\n            redirect_scope = dict(scope)\n            if scope[\"path\"].endswith(\"/\"):\n                redirect_scope[\"path\"] = redirect_scope[\"path\"].rstrip(\"/\")\n            else:\n                redirect_scope[\"path\"] = redirect_scope[\"path\"] + \"/\"\n\n            for route in self.routes:\n                match, child_scope = route.matches(redirect_scope)\n                if match != Match.NONE:\n                    redirect_url = URL(scope=redirect_scope)\n                    response = RedirectResponse(url=str(redirect_url))\n                    await response(scope, receive, send)\n                    return\n\n        await self.default(scope, receive, send)\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": " async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if \"router\" not in scope:\n            scope[\"router\"] = self\n\n        if scope[\"type\"] == \"lifespan\":\n            await self.lifespan(scope, receive, send)\n            return\n\n        partial = None\n\n        for route in self.routes:\n            match, child_scope = route.matches(scope)\n            if match == Match.FULL:\n                scope.update(child_scope)\n                await route.handle(scope, receive, send)\n                return\n            elif match == Match.PARTIAL and partial is None:\n                partial = route\n                partial_scope = child_scope\n\n        if partial is not None:\n            scope.update(partial_scope)\n            await partial.handle(scope, receive, send)\n            return\n\n        if scope[\"type\"] == \"http\" and self.redirect_slashes and scope[\"path\"] != \"/\":\n            redirect_scope = dict(scope)\n            if scope[\"path\"].endswith(\"/\"):\n                redirect_scope[\"path\"] = redirect_scope[\"path\"].rstrip(\"/\")\n            else:\n                redirect_scope[\"path\"] = redirect_scope[\"path\"] + \"/\"\n\n            for route in self.routes:\n                match, child_scope = route.matches(redirect_scope)\n                if match != Match.NONE:\n                    redirect_url = URL(scope=redirect_scope)\n                    response = RedirectResponse(url=str(redirect_url))\n                    await response(scope, receive, send)\n                    return\n\n        await self.default(scope, receive, send)\n",
      "lineHeight": 1.2,
      "baseline": 802
    },
    {
      "type": "rectangle",
      "version": 91,
      "versionNonce": 1884828882,
      "isDeleted": false,
      "id": "xKBM58xHNcGiAlSpsvb6Y",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1811.3861076088565,
      "y": 134.62702151549172,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 851.1151234174713,
      "height": 884.6160380028911,
      "seed": 590419922,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "id": "7ZMOsu_c0zHSjyKC3-8c6",
          "type": "arrow"
        }
      ],
      "updated": 1700994069913,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 74,
      "versionNonce": 655044238,
      "isDeleted": false,
      "id": "W2iVcDqO-9Uap29u25aKs",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1964.326570867203,
      "y": 149.72808790128502,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 169.875,
      "height": 19.2,
      "seed": 712620370,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "继承自router.Router",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "继承自router.Router",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 127,
      "versionNonce": 91179346,
      "isDeleted": false,
      "id": "b_7GfY-im7fIibaghCVot",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2160.565564898635,
      "y": 209.08433071602795,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 174.875,
      "height": 19.2,
      "seed": 736442638,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "在scope中添加当前对象",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "在scope中添加当前对象",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 101,
      "versionNonce": 1124216014,
      "isDeleted": false,
      "id": "kueiLpvmljqug-qspKBxD",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2190.141145041295,
      "y": 254.80217939441906,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 96,
      "height": 19.2,
      "seed": 400259410,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312273,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "执行生命周期",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "执行生命周期",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 151,
      "versionNonce": 119426834,
      "isDeleted": false,
      "id": "mkmyH2miuQl08Qql7DdkR",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1992.1596236765863,
      "y": 296.15835748436854,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 292.375,
      "height": 19.2,
      "seed": 1674724238,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "lifespan是生命周期，不涉及路由处理 ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "lifespan是生命周期，不涉及路由处理 ",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 130,
      "versionNonce": 1006592782,
      "isDeleted": false,
      "id": "gvzRQ7zX5ncN_NSPk8nIg",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2323.888697977911,
      "y": 223.41844237124695,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 332.625,
      "height": 172.79999999999998,
      "seed": 226765006,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "当 ASGI 服务器启动 FastAPI 应用时，\n它会发送一个 lifespan.startup 类型的\n请求。这是应用进行初始化操作的时机，\n如加载配置、建立数据库连接、启动后台任务\n\n当 ASGI 服务器准备关闭 FastAPI 应用时，\n它会发送一个 lifespan.shutdown 类型的\n请求。这是应用执行清理操作的时机，如关闭\n数据库连接、停止后台任务、释放资源等。",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "当 ASGI 服务器启动 FastAPI 应用时，\n它会发送一个 lifespan.startup 类型的\n请求。这是应用进行初始化操作的时机，\n如加载配置、建立数据库连接、启动后台任务\n\n当 ASGI 服务器准备关闭 FastAPI 应用时，\n它会发送一个 lifespan.shutdown 类型的\n请求。这是应用执行清理操作的时机，如关闭\n数据库连接、停止后台任务、释放资源等。",
      "lineHeight": 1.2,
      "baseline": 168
    },
    {
      "type": "text",
      "version": 18,
      "versionNonce": 275160274,
      "isDeleted": false,
      "id": "CRM-FQSID9F2FmGu8Quvr",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1780.269141473222,
      "y": 1042.328889119886,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 796.875,
      "height": 288,
      "seed": 994744146,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    def matches(self, scope: Scope) -> typing.Tuple[Match, Scope]:\n        if scope[\"type\"] == \"http\":\n            match = self.path_regex.match(scope[\"path\"])\n            if match:\n                matched_params = match.groupdict()\n                for key, value in matched_params.items():\n                    matched_params[key] = self.param_convertors[key].convert(value)\n                path_params = dict(scope.get(\"path_params\", {}))\n                path_params.update(matched_params)\n                child_scope = {\"endpoint\": self.endpoint, \"path_params\": path_params}\n                if self.methods and scope[\"method\"] not in self.methods:\n                    return Match.PARTIAL, child_scope\n                else:\n                    return Match.FULL, child_scope\n        return Match.NONE, {}",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def matches(self, scope: Scope) -> typing.Tuple[Match, Scope]:\n        if scope[\"type\"] == \"http\":\n            match = self.path_regex.match(scope[\"path\"])\n            if match:\n                matched_params = match.groupdict()\n                for key, value in matched_params.items():\n                    matched_params[key] = self.param_convertors[key].convert(value)\n                path_params = dict(scope.get(\"path_params\", {}))\n                path_params.update(matched_params)\n                child_scope = {\"endpoint\": self.endpoint, \"path_params\": path_params}\n                if self.methods and scope[\"method\"] not in self.methods:\n                    return Match.PARTIAL, child_scope\n                else:\n                    return Match.FULL, child_scope\n        return Match.NONE, {}",
      "lineHeight": 1.2,
      "baseline": 283
    },
    {
      "type": "rectangle",
      "version": 104,
      "versionNonce": 75223374,
      "isDeleted": false,
      "id": "g_6io49NO8iCYY_ALaRRI",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1809.4298640764168,
      "y": 1032.0632001974013,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 851.1741824421458,
      "height": 322.63667218433557,
      "seed": 1223722830,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false
    },
    {
      "type": "arrow",
      "version": 152,
      "versionNonce": 1152554130,
      "isDeleted": false,
      "id": "7ZMOsu_c0zHSjyKC3-8c6",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1924.2797977860787,
      "y": 410.6469864638971,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 81.58758126641192,
      "height": 637.0156382445016,
      "seed": 1878470738,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993352540,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": {
        "elementId": "xKBM58xHNcGiAlSpsvb6Y",
        "focus": -0.8592673178909139,
        "gap": 28.419565190015817
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -64.94325886827869,
          141.60137316973152
        ],
        [
          -81.58758126641192,
          637.0156382445016
        ]
      ]
    },
    {
      "type": "text",
      "version": 196,
      "versionNonce": 1473279886,
      "isDeleted": false,
      "id": "WogELGswhD_xkcB_FJhOq",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2135.677872957338,
      "y": 1061.5758447196365,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 437.5,
      "height": 19.2,
      "seed": 750787982,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "进行路由匹配，如果匹配成功返回对象，没匹配成功返回None",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "进行路由匹配，如果匹配成功返回对象，没匹配成功返回None",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 69,
      "versionNonce": 624889938,
      "isDeleted": false,
      "id": "tlqitXNbPXEi_UjTsMOCI",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2322.052400549368,
      "y": 1094.1851479940885,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 96,
      "height": 19.2,
      "seed": 428065618,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "l9zCg60ATv3dDw0unLQOt",
          "type": "arrow"
        }
      ],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "进行路由匹配",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "进行路由匹配",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "arrow",
      "version": 143,
      "versionNonce": 506877390,
      "isDeleted": false,
      "id": "l9zCg60ATv3dDw0unLQOt",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2063.6866172489795,
      "y": 1101.208668332607,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 255.35576548925837,
      "height": 8.528609622070462,
      "seed": 136084750,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": {
        "elementId": "tlqitXNbPXEi_UjTsMOCI",
        "focus": -0.008708473676201065,
        "gap": 3.010017811130183
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          83.78077728576272,
          8.528609622070462
        ],
        [
          255.35576548925837,
          4.013456597110007
        ]
      ]
    },
    {
      "type": "text",
      "version": 77,
      "versionNonce": 1197291026,
      "isDeleted": false,
      "id": "5qtjmZ8zb6bej7x8W78BI",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2340.1129896840716,
      "y": 1135.0721437812686,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 192,
      "height": 19.2,
      "seed": 2019711054,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "遍历匹配得到的键值对结果",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "遍历匹配得到的键值对结果",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 141,
      "versionNonce": 1355181070,
      "isDeleted": false,
      "id": "3ecvxB8U5pIgBvVwg9oPJ",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1814.3511399985118,
      "y": 1150.3733795976536,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 96,
      "height": 38.4,
      "seed": 396553746,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "KIk1WsJQ-yNAcofOid6J6",
          "type": "arrow"
        }
      ],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "进行请求参数\n的一些处理",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "进行请求参数\n的一些处理",
      "lineHeight": 1.2,
      "baseline": 34
    },
    {
      "type": "arrow",
      "version": 47,
      "versionNonce": 1446028242,
      "isDeleted": false,
      "id": "KIk1WsJQ-yNAcofOid6J6",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1914.6873712051474,
      "y": 1168.4339457672177,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 48.161387304762684,
      "height": 0,
      "seed": 1279326930,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "3ecvxB8U5pIgBvVwg9oPJ",
        "focus": -0.05934551200187599,
        "gap": 4.336231206635603
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          48.161387304762684,
          0
        ]
      ]
    },
    {
      "type": "text",
      "version": 94,
      "versionNonce": 1568258638,
      "isDeleted": false,
      "id": "a9G2khh4AGCr9iVKi_VSa",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2256.0813641843833,
      "y": 1198.7856380814808,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 168.25,
      "height": 19.2,
      "seed": 1676562130,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "将参数更新到params中",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "将参数更新到params中",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 97,
      "versionNonce": 466639250,
      "isDeleted": false,
      "id": "pChG9rPJyYTj8LkAoqupk",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2293.456599802304,
      "y": 1255.7264372919615,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 206.25,
      "height": 19.2,
      "seed": 948908942,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993312274,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "405 Method Not Allowed",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "405 Method Not Allowed",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 77,
      "versionNonce": 1514514706,
      "isDeleted": false,
      "id": "M1_WgXpPWyb-fustW-F6J",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2461.519804871402,
      "y": 1272.7836106058242,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 168.75,
      "height": 76.8,
      "seed": 1064698002,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993314949,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "class Match(Enum):\n    NONE = 0\n    PARTIAL = 1\n    FULL = 2",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class Match(Enum):\n    NONE = 0\n    PARTIAL = 1\n    FULL = 2",
      "lineHeight": 1.2,
      "baseline": 72
    },
    {
      "type": "arrow",
      "version": 48,
      "versionNonce": 2049277202,
      "isDeleted": false,
      "id": "WR95wN_QS_O8aVWeyORNv",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2334.092770340698,
      "y": 1272.783610605824,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 165.05311836254987,
      "height": 47.65971384205113,
      "seed": 657872718,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993320067,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          165.05311836254987,
          47.65971384205113
        ]
      ]
    },
    {
      "type": "text",
      "version": 82,
      "versionNonce": 1358434702,
      "isDeleted": false,
      "id": "RQQvflZ7CixF9ADYrueXd",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1826.1406386107774,
      "y": 415.66142091637295,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 64,
      "height": 57.599999999999994,
      "seed": 1522954894,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993349231,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "得到路由\n匹配后\n的结果",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "得到路由\n匹配后\n的结果",
      "lineHeight": 1.2,
      "baseline": 53
    },
    {
      "type": "text",
      "version": 170,
      "versionNonce": 168351822,
      "isDeleted": false,
      "id": "FhlBbOxcv5hFtGC50tIK_",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2258.088081000368,
      "y": 433.47111590687274,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 78.875,
      "height": 19.2,
      "seed": 544909838,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "oBg-PBiZgeopoRWRwJawY",
          "type": "arrow"
        }
      ],
      "updated": 1700994108430,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "更新scope",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "更新scope",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 78,
      "versionNonce": 466619918,
      "isDeleted": false,
      "id": "ymhehHucDNgNMh1esa_Ja",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2139.4404813405217,
      "y": 411.64796431926305,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 515.625,
      "height": 19.2,
      "seed": 554418446,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "oBg-PBiZgeopoRWRwJawY",
          "type": "arrow"
        }
      ],
      "updated": 1700993406627,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "{\"endpoint\": self.endpoint, \"path_params\": path_params}",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "{\"endpoint\": self.endpoint, \"path_params\": path_params}",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "arrow",
      "version": 55,
      "versionNonce": 306379986,
      "isDeleted": false,
      "id": "oBg-PBiZgeopoRWRwJawY",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2200.645608327177,
      "y": 442.50137602651574,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 58.195040280106696,
      "height": 13.043716716752954,
      "seed": 1004084562,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700993413108,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "ymhehHucDNgNMh1esa_Ja",
        "focus": 1.3341009011247833,
        "gap": 11.65341170725273
      },
      "endBinding": {
        "elementId": "FhlBbOxcv5hFtGC50tIK_",
        "focus": 1.1278571587158053,
        "gap": 4.013456597109922
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          32.1076068466009,
          -0.501673462711608
        ],
        [
          58.195040280106696,
          -13.043716716752954
        ]
      ]
    },
    {
      "type": "text",
      "version": 95,
      "versionNonce": 1064699918,
      "isDeleted": false,
      "id": "UL5Tm5lOsDX3_g3UH2olf",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2177.568215669944,
      "y": 645.4313805045585,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 198,
      "height": 19.2,
      "seed": 1457325010,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993464836,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "开启了redirect_slashes",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "开启了redirect_slashes",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 153,
      "versionNonce": 467296786,
      "isDeleted": false,
      "id": "1KCDfppIp_-yfnsPkZlPH",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2217.9534690989954,
      "y": 696.3520063019437,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 169.375,
      "height": 19.2,
      "seed": 249390994,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993509869,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "如果末端存在/，则去除",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "如果末端存在/，则去除",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 88,
      "versionNonce": 1491269006,
      "isDeleted": false,
      "id": "_D5lSOQRHI_tdw-qjb4tk",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2212.685863292815,
      "y": 737.9915467308995,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 114.75,
      "height": 19.2,
      "seed": 378524814,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993520239,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "不存在/,则添加",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "不存在/,则添加",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 116,
      "versionNonce": 392898446,
      "isDeleted": false,
      "id": "P0WrumBzMfNSt5sYbTU1N",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2274.894245344335,
      "y": 798.6949313594258,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 96,
      "height": 19.2,
      "seed": 544536654,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993545198,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "重新匹配一次",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "重新匹配一次",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 133,
      "versionNonce": 1512249038,
      "isDeleted": false,
      "id": "132xVjKB7a7cZU2-xb6Mk",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2188.6050777798755,
      "y": 837.324385081834,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 208,
      "height": 19.2,
      "seed": 84210642,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993605737,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "如果匹配到了，重新进行赋值",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "如果匹配到了，重新进行赋值",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 90,
      "versionNonce": 1723640398,
      "isDeleted": false,
      "id": "b0RVvjJLr3exszL_a0duT",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1903.1484681902787,
      "y": 975.2867001203155,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 571.875,
      "height": 19.2,
      "seed": 1336772178,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993671027,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "self.default = self.not_found if default is None else default",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "self.default = self.not_found if default is None else default",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 88,
      "versionNonce": 276053010,
      "isDeleted": false,
      "id": "fLEKZgoBxN3b0DD6E74nw",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2276.1483486231264,
      "y": 951.7076799306459,
      "strokeColor": "#6741d9",
      "backgroundColor": "transparent",
      "width": 121.875,
      "height": 19.2,
      "seed": 2083120398,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700993685114,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "404 not found",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "404 not found",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 29,
      "versionNonce": 217541714,
      "isDeleted": false,
      "id": "8G2mKRjUxYzW-C88S44n8",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1783.937834440226,
      "y": 1388.2186454578477,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 740.625,
      "height": 230.39999999999998,
      "seed": 201801038,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "zfHjXRbXGjP_Bzx9Y1kHk",
          "type": "arrow"
        }
      ],
      "updated": 1700994087798,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    async def handle(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if self.methods and scope[\"method\"] not in self.methods:\n            headers = {\"Allow\": \", \".join(self.methods)}\n            if \"app\" in scope:\n                raise HTTPException(status_code=405, headers=headers)\n            else:\n                response = PlainTextResponse(\n                    \"Method Not Allowed\", status_code=405, headers=headers\n                )\n            await response(scope, receive, send)\n        else:\n            await self.app(scope, receive, send)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    async def handle(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if self.methods and scope[\"method\"] not in self.methods:\n            headers = {\"Allow\": \", \".join(self.methods)}\n            if \"app\" in scope:\n                raise HTTPException(status_code=405, headers=headers)\n            else:\n                response = PlainTextResponse(\n                    \"Method Not Allowed\", status_code=405, headers=headers\n                )\n            await response(scope, receive, send)\n        else:\n            await self.app(scope, receive, send)",
      "lineHeight": 1.2,
      "baseline": 226
    },
    {
      "type": "rectangle",
      "version": 66,
      "versionNonce": 2089489742,
      "isDeleted": false,
      "id": "oV_HZTsh0RaeODPluN58r",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1806.9841618432017,
      "y": 1373.4032138603761,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 856.0027145205934,
      "height": 273.26240502003566,
      "seed": 2092078862,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1700994059951,
      "link": null,
      "locked": false
    },
    {
      "type": "arrow",
      "version": 265,
      "versionNonce": 1051726094,
      "isDeleted": false,
      "id": "zfHjXRbXGjP_Bzx9Y1kHk",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2353.0594855706904,
      "y": 466.30832301870583,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 299.75926462386496,
      "height": 929.7173204873811,
      "seed": 279404430,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1700995084174,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": {
        "elementId": "8G2mKRjUxYzW-C88S44n8",
        "focus": 0.900600753339279,
        "gap": 7.822865816611852
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          299.75926462386496,
          359.9758804662061
        ],
        [
          179.32621468614707,
          929.7173204873811
        ]
      ]
    },
    {
      "type": "text",
      "version": 160,
      "versionNonce": 2130459730,
      "isDeleted": false,
      "id": "OUoYGOx0HS49luQzfout3",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2247.8456234088144,
      "y": 1599.835445954745,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 270.875,
      "height": 19.2,
      "seed": 917510670,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700995298046,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "将请求传递给下一个app，(即中间件)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "将请求传递给下一个app，(即中间件)",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 80,
      "versionNonce": 278170834,
      "isDeleted": false,
      "id": "GSNma2Mn3AiA8inNA4N_L",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2218.729850798548,
      "y": 146.69724654941422,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "width": 148.375,
      "height": 19.2,
      "seed": 1933214546,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700995402584,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "请求进入APIRouter",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "请求进入APIRouter",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 38,
      "versionNonce": 777016722,
      "isDeleted": false,
      "id": "xBncNwHu9Fg2qiXj6iKMu",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2949.739603914854,
      "y": 593.3653311750246,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 825,
      "height": 2073.6,
      "seed": 1031614990,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1700998849588,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "class APIRoute(routing.Route):\n    def __init__(self,path: str,endpoint: Callable[..., Any],*,\n        response_model: Any = Default(None),\n        status_code: Optional[int] = None,\n        tags: Optional[List[Union[str, Enum]]] = None,\n        dependencies: Optional[Sequence[params.Depends]] = None,\n        summary: Optional[str] = None,\n        description: Optional[str] = None,\n        response_description: str = \"Successful Response\",\n        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n        deprecated: Optional[bool] = None,\n        name: Optional[str] = None,\n        methods: Optional[Union[Set[str], List[str]]] = None,\n        operation_id: Optional[str] = None,\n        response_model_include: Optional[IncEx] = None,\n        response_model_exclude: Optional[IncEx] = None,\n        response_model_by_alias: bool = True,\n        response_model_exclude_unset: bool = False,\n        response_model_exclude_defaults: bool = False,\n        response_model_exclude_none: bool = False,\n        include_in_schema: bool = True,\n        response_class = Default(JSONResponse),\n        dependency_overrides_provider: Optional[Any] = None,\n        callbacks: Optional[List[BaseRoute]] = None,\n        openapi_extra: Optional[Dict[str, Any]] = None,\n        generate_unique_id_function = Default(generate_unique_id),\n    ) -> None:\n        self.path = path\n        self.endpoint = endpoint\n        if isinstance(response_model, DefaultPlaceholder):\n            return_annotation = get_typed_return_annotation(endpoint)\n            if lenient_issubclass(return_annotation, Response):\n                response_model = None\n            else:\n                response_model = return_annotation\n        self.response_model = response_model\n        self.summary = summary\n        self.response_description = response_description\n        self.deprecated = deprecated\n        self.operation_id = operation_id\n        self.response_model_include = response_model_include\n        self.response_model_exclude = response_model_exclude\n        self.response_model_by_alias = response_model_by_alias\n        self.response_model_exclude_unset = response_model_exclude_unset\n        self.response_model_exclude_defaults = response_model_exclude_defaults\n        self.response_model_exclude_none = response_model_exclude_none\n        self.include_in_schema = include_in_schema\n        self.response_class = response_class\n        self.dependency_overrides_provider = dependency_overrides_provider\n        self.callbacks = callbacks\n        self.openapi_extra = openapi_extra\n        self.generate_unique_id_function = generate_unique_id_function\n        self.tags = tags or []\n        self.responses = responses or {}\n        self.name = get_name(endpoint) if name is None else name\n        self.path_regex, self.path_format, self.param_convertors = compile_path(path)\n        if methods is None:\n            methods = [\"GET\"]\n        self.methods: Set[str] = {method.upper() for method in methods}\n        if isinstance(generate_unique_id_function, DefaultPlaceholder):\n            current_generate_unique_id: Callable[\n                [\"APIRoute\"], str\n            ] = generate_unique_id_function.value\n        else:\n            current_generate_unique_id = generate_unique_id_function\n        self.unique_id = self.operation_id or current_generate_unique_id(self)\n        # normalize enums e.g. http.HTTPStatus\n        if isinstance(status_code, IntEnum):\n            status_code = int(status_code)\n        self.status_code = status_code\n        if self.response_model:\n            assert is_body_allowed_for_status_code(\n                status_code\n            ), f\"Status code {status_code} must not have a response body\"\n            response_name = \"Response_\" + self.unique_id\n            self.response_field = create_response_field(name=response_name,\n                type_=self.response_model,mode=\"serialization\",)\n            self.secure_cloned_response_field = create_cloned_field(self.response_field)\n        else:\n            self.response_field = None  # type: ignore\n            self.secure_cloned_response_field = None\n        self.dependencies = list(dependencies or [])\n        self.description = description or inspect.cleandoc(self.endpoint.__doc__ or \"\")\n        self.description = self.description.split(\"\\f\")[0].strip()\n        response_fields = {}\n        for additional_status_code, response in self.responses.items():\n            model = response.get(\"model\")\n            if model:\n                assert is_body_allowed_for_status_code(\n                    additional_status_code\n                ), f\"Status code {additional_status_code} must not have a response body\"\n                response_name = f\"Response_{additional_status_code}_{self.unique_id}\"\n                response_field = create_response_field(name=response_name, type_=model)\n                response_fields[additional_status_code] = response_field\n        if response_fields:\n            self.response_fields: Dict[Union[int, str], ModelField] = response_fields\n        else:\n            self.response_fields = {}\n\n        assert callable(endpoint), \"An endpoint must be a callable\"\n        self.dependant = get_dependant(path=self.path_format, call=self.endpoint)\n        for depends in self.dependencies[::-1]:\n            self.dependant.dependencies.insert(\n                0,\n                get_parameterless_sub_dependant(depends=depends, path=self.path_format),\n            )\n        self.body_field = get_body_field(dependant=self.dependant, name=self.unique_id)\n        self.app = request_response(self.get_route_handler())",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class APIRoute(routing.Route):\n    def __init__(self,path: str,endpoint: Callable[..., Any],*,\n        response_model: Any = Default(None),\n        status_code: Optional[int] = None,\n        tags: Optional[List[Union[str, Enum]]] = None,\n        dependencies: Optional[Sequence[params.Depends]] = None,\n        summary: Optional[str] = None,\n        description: Optional[str] = None,\n        response_description: str = \"Successful Response\",\n        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n        deprecated: Optional[bool] = None,\n        name: Optional[str] = None,\n        methods: Optional[Union[Set[str], List[str]]] = None,\n        operation_id: Optional[str] = None,\n        response_model_include: Optional[IncEx] = None,\n        response_model_exclude: Optional[IncEx] = None,\n        response_model_by_alias: bool = True,\n        response_model_exclude_unset: bool = False,\n        response_model_exclude_defaults: bool = False,\n        response_model_exclude_none: bool = False,\n        include_in_schema: bool = True,\n        response_class = Default(JSONResponse),\n        dependency_overrides_provider: Optional[Any] = None,\n        callbacks: Optional[List[BaseRoute]] = None,\n        openapi_extra: Optional[Dict[str, Any]] = None,\n        generate_unique_id_function = Default(generate_unique_id),\n    ) -> None:\n        self.path = path\n        self.endpoint = endpoint\n        if isinstance(response_model, DefaultPlaceholder):\n            return_annotation = get_typed_return_annotation(endpoint)\n            if lenient_issubclass(return_annotation, Response):\n                response_model = None\n            else:\n                response_model = return_annotation\n        self.response_model = response_model\n        self.summary = summary\n        self.response_description = response_description\n        self.deprecated = deprecated\n        self.operation_id = operation_id\n        self.response_model_include = response_model_include\n        self.response_model_exclude = response_model_exclude\n        self.response_model_by_alias = response_model_by_alias\n        self.response_model_exclude_unset = response_model_exclude_unset\n        self.response_model_exclude_defaults = response_model_exclude_defaults\n        self.response_model_exclude_none = response_model_exclude_none\n        self.include_in_schema = include_in_schema\n        self.response_class = response_class\n        self.dependency_overrides_provider = dependency_overrides_provider\n        self.callbacks = callbacks\n        self.openapi_extra = openapi_extra\n        self.generate_unique_id_function = generate_unique_id_function\n        self.tags = tags or []\n        self.responses = responses or {}\n        self.name = get_name(endpoint) if name is None else name\n        self.path_regex, self.path_format, self.param_convertors = compile_path(path)\n        if methods is None:\n            methods = [\"GET\"]\n        self.methods: Set[str] = {method.upper() for method in methods}\n        if isinstance(generate_unique_id_function, DefaultPlaceholder):\n            current_generate_unique_id: Callable[\n                [\"APIRoute\"], str\n            ] = generate_unique_id_function.value\n        else:\n            current_generate_unique_id = generate_unique_id_function\n        self.unique_id = self.operation_id or current_generate_unique_id(self)\n        # normalize enums e.g. http.HTTPStatus\n        if isinstance(status_code, IntEnum):\n            status_code = int(status_code)\n        self.status_code = status_code\n        if self.response_model:\n            assert is_body_allowed_for_status_code(\n                status_code\n            ), f\"Status code {status_code} must not have a response body\"\n            response_name = \"Response_\" + self.unique_id\n            self.response_field = create_response_field(name=response_name,\n                type_=self.response_model,mode=\"serialization\",)\n            self.secure_cloned_response_field = create_cloned_field(self.response_field)\n        else:\n            self.response_field = None  # type: ignore\n            self.secure_cloned_response_field = None\n        self.dependencies = list(dependencies or [])\n        self.description = description or inspect.cleandoc(self.endpoint.__doc__ or \"\")\n        self.description = self.description.split(\"\\f\")[0].strip()\n        response_fields = {}\n        for additional_status_code, response in self.responses.items():\n            model = response.get(\"model\")\n            if model:\n                assert is_body_allowed_for_status_code(\n                    additional_status_code\n                ), f\"Status code {additional_status_code} must not have a response body\"\n                response_name = f\"Response_{additional_status_code}_{self.unique_id}\"\n                response_field = create_response_field(name=response_name, type_=model)\n                response_fields[additional_status_code] = response_field\n        if response_fields:\n            self.response_fields: Dict[Union[int, str], ModelField] = response_fields\n        else:\n            self.response_fields = {}\n\n        assert callable(endpoint), \"An endpoint must be a callable\"\n        self.dependant = get_dependant(path=self.path_format, call=self.endpoint)\n        for depends in self.dependencies[::-1]:\n            self.dependant.dependencies.insert(\n                0,\n                get_parameterless_sub_dependant(depends=depends, path=self.path_format),\n            )\n        self.body_field = get_body_field(dependant=self.dependant, name=self.unique_id)\n        self.app = request_response(self.get_route_handler())",
      "lineHeight": 1.2,
      "baseline": 2069
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}